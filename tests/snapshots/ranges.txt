Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            7,
            8,
            14,
            15,
            28,
            29,
            35,
            36,
            46,
            47,
            63,
            64,
            71,
            72,
            77,
            78,
            93,
            94,
            100,
            101,
            110,
            111,
            120,
            121,
            130,
            131,
            140,
            141,
            151,
            152,
            162,
            163,
            172,
            173,
            182,
            183,
            191,
            192,
            200,
            201,
            210,
            211,
            220,
            221,
            230,
            231,
            240,
            241,
            249,
            250,
            258,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 318,
                message: "possibly useless use of ... in void context",
                location: Location { start: 29, length: 5 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of .. in void context",
                location: Location { start: 72, length: 4 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of .. in void context",
                location: Location { start: 101, length: 8 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of == in void context",
                location: Location { start: 121, length: 8 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of != in void context",
                location: Location { start: 131, length: 8 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of <=> in void context",
                location: Location { start: 152, length: 9 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of < in void context",
                location: Location { start: 183, length: 7 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of > in void context",
                location: Location { start: 192, length: 7 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of <= in void context",
                location: Location { start: 201, length: 8 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of >= in void context",
                location: Location { start: 211, length: 8 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of .. in void context",
                location: Location { start: 241, length: 7 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of .. in void context",
                location: Location { start: 250, length: 7 },
                level: 1,
            },
        ],
        content_pool_offset: 1857,
        content_pool_size: 17,
    },
    root: NodeRef(123),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 4, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 1, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: None,
                    right: Some(
                        NodeRef(0),
                    ),
                    operator_loc: Location { start: 1, length: 3 },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 1, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(1),
                    ],
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 0, length: 6 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(2),
                    ),
                    opening_loc: Location { start: 0, length: 1 },
                    closing_loc: Location { start: 5, length: 1 },
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 11, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 9, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: None,
                    right: Some(
                        NodeRef(4),
                    ),
                    operator_loc: Location { start: 9, length: 2 },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 9, length: 3 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(5),
                    ],
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 8, length: 5 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(6),
                    ),
                    opening_loc: Location { start: 8, length: 1 },
                    closing_loc: Location { start: 12, length: 1 },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 21, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 24, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 21, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(8),
                    ),
                    right: Some(
                        NodeRef(9),
                    ),
                    operator_loc: Location { start: 22, length: 2 },
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 21, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 20, length: 6 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(11),
                    ),
                    opening_loc: Location { start: 20, length: 1 },
                    closing_loc: Location { start: 25, length: 1 },
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 20, length: 6 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(12),
                    ],
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 19, length: 8 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(13),
                    ),
                    opening_loc: Location { start: 19, length: 1 },
                    closing_loc: Location { start: 26, length: 1 },
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 19, length: 8 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(14),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 15, length: 12 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 15, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(15),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 29, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 33, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 29, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(17),
                    ),
                    right: Some(
                        NodeRef(18),
                    ),
                    operator_loc: Location { start: 30, length: 3 },
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 36, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 36, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 43, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 40, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(21),
                    ),
                    operator_loc: Location { start: 40, length: 3 },
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 40, length: 4 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(22),
                    ],
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 36, length: 9 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(20),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 39, length: 6 },
                    ),
                    opening_loc: Some(
                        Location { start: 39, length: 1 },
                    ),
                    arguments: Some(
                        NodeRef(23),
                    ),
                    closing_loc: Some(
                        Location { start: 44, length: 1 },
                    ),
                    block: None,
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 49, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 49, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 52, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 57, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 57, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 54, length: 6 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(26),
                    ),
                    operator_loc: Location { start: 54, length: 3 },
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 49, length: 11 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(25),
                    value: NodeRef(27),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 47, length: 15 },
            node_kind: HashNode(
                HashNode {
                    opening_loc: Location { start: 47, length: 1 },
                    elements: [
                        NodeRef(28),
                    ],
                    closing_loc: Location { start: 61, length: 1 },
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 65, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 65, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(30),
                    ),
                    right: None,
                    operator_loc: Location { start: 66, length: 3 },
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 65, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(31),
                    ],
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 64, length: 6 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(32),
                    ),
                    opening_loc: Location { start: 64, length: 1 },
                    closing_loc: Location { start: 69, length: 1 },
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 72, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 75, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 72, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(34),
                    ),
                    right: Some(
                        NodeRef(35),
                    ),
                    operator_loc: Location { start: 73, length: 2 },
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 80, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 80, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 83, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 87, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 87, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 85, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(38),
                    ),
                    operator_loc: Location { start: 85, length: 2 },
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 80, length: 10 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(37),
                    value: NodeRef(39),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 78, length: 14 },
            node_kind: HashNode(
                HashNode {
                    opening_loc: Location { start: 78, length: 1 },
                    elements: [
                        NodeRef(40),
                    ],
                    closing_loc: Location { start: 91, length: 1 },
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 95, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 95, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(42),
                    ),
                    right: None,
                    operator_loc: Location { start: 96, length: 2 },
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 95, length: 3 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(43),
                    ],
                },
            ),
        },
        Node {
            identifier: 47,
            location: Location { start: 94, length: 5 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(44),
                    ),
                    opening_loc: Location { start: 94, length: 1 },
                    closing_loc: Location { start: 98, length: 1 },
                },
            ),
        },
        Node {
            identifier: 48,
            location: Location { start: 101, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 49,
            location: Location { start: 108, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 50,
            location: Location { start: 106, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(47),
                    ),
                    operator_loc: Location { start: 106, length: 2 },
                },
            ),
        },
        Node {
            identifier: 51,
            location: Location { start: 101, length: 8 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(46),
                    ),
                    right: Some(
                        NodeRef(48),
                    ),
                    operator_loc: Location { start: 103, length: 2 },
                },
            ),
        },
        Node {
            identifier: 52,
            location: Location { start: 111, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 53,
            location: Location { start: 111, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(50),
                    ),
                    right: None,
                    operator_loc: Location { start: 112, length: 2 },
                },
            ),
        },
        Node {
            identifier: 54,
            location: Location { start: 118, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 55,
            location: Location { start: 111, length: 8 },
            node_kind: AndNode(
                AndNode {
                    left: NodeRef(51),
                    right: NodeRef(52),
                    operator_loc: Location { start: 115, length: 2 },
                },
            ),
        },
        Node {
            identifier: 56,
            location: Location { start: 121, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 57,
            location: Location { start: 121, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(54),
                    ),
                    right: None,
                    operator_loc: Location { start: 122, length: 2 },
                },
            ),
        },
        Node {
            identifier: 58,
            location: Location { start: 128, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 60,
            location: Location { start: 128, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(56),
                    ],
                },
            ),
        },
        Node {
            identifier: 59,
            location: Location { start: 121, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(55),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 125, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(57),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 61,
            location: Location { start: 131, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 62,
            location: Location { start: 131, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(59),
                    ),
                    right: None,
                    operator_loc: Location { start: 132, length: 2 },
                },
            ),
        },
        Node {
            identifier: 63,
            location: Location { start: 138, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 65,
            location: Location { start: 138, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(61),
                    ],
                },
            ),
        },
        Node {
            identifier: 64,
            location: Location { start: 131, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(60),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(5),
                    message_loc: Some(
                        Location { start: 135, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(62),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 66,
            location: Location { start: 141, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 67,
            location: Location { start: 141, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(64),
                    ),
                    right: None,
                    operator_loc: Location { start: 142, length: 2 },
                },
            ),
        },
        Node {
            identifier: 68,
            location: Location { start: 149, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 70,
            location: Location { start: 149, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(66),
                    ],
                },
            ),
        },
        Node {
            identifier: 69,
            location: Location { start: 141, length: 9 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(65),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(6),
                    message_loc: Some(
                        Location { start: 145, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(67),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 71,
            location: Location { start: 152, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 72,
            location: Location { start: 152, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(69),
                    ),
                    right: None,
                    operator_loc: Location { start: 153, length: 2 },
                },
            ),
        },
        Node {
            identifier: 73,
            location: Location { start: 160, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 75,
            location: Location { start: 160, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(71),
                    ],
                },
            ),
        },
        Node {
            identifier: 74,
            location: Location { start: 152, length: 9 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(70),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(7),
                    message_loc: Some(
                        Location { start: 156, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(72),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 76,
            location: Location { start: 163, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 77,
            location: Location { start: 163, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(74),
                    ),
                    right: None,
                    operator_loc: Location { start: 164, length: 2 },
                },
            ),
        },
        Node {
            identifier: 78,
            location: Location { start: 170, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 80,
            location: Location { start: 170, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(76),
                    ],
                },
            ),
        },
        Node {
            identifier: 79,
            location: Location { start: 163, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(75),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(8),
                    message_loc: Some(
                        Location { start: 167, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(77),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 81,
            location: Location { start: 173, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 82,
            location: Location { start: 173, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(79),
                    ),
                    right: None,
                    operator_loc: Location { start: 174, length: 2 },
                },
            ),
        },
        Node {
            identifier: 83,
            location: Location { start: 180, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 85,
            location: Location { start: 180, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(81),
                    ],
                },
            ),
        },
        Node {
            identifier: 84,
            location: Location { start: 173, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(80),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(9),
                    message_loc: Some(
                        Location { start: 177, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(82),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 86,
            location: Location { start: 183, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 87,
            location: Location { start: 183, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(84),
                    ),
                    right: None,
                    operator_loc: Location { start: 184, length: 2 },
                },
            ),
        },
        Node {
            identifier: 88,
            location: Location { start: 189, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 90,
            location: Location { start: 189, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(86),
                    ],
                },
            ),
        },
        Node {
            identifier: 89,
            location: Location { start: 183, length: 7 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(85),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(10),
                    message_loc: Some(
                        Location { start: 187, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(87),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 91,
            location: Location { start: 192, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 92,
            location: Location { start: 192, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(89),
                    ),
                    right: None,
                    operator_loc: Location { start: 193, length: 2 },
                },
            ),
        },
        Node {
            identifier: 93,
            location: Location { start: 198, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 95,
            location: Location { start: 198, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(91),
                    ],
                },
            ),
        },
        Node {
            identifier: 94,
            location: Location { start: 192, length: 7 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(90),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(11),
                    message_loc: Some(
                        Location { start: 196, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(92),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 96,
            location: Location { start: 201, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 97,
            location: Location { start: 201, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(94),
                    ),
                    right: None,
                    operator_loc: Location { start: 202, length: 2 },
                },
            ),
        },
        Node {
            identifier: 98,
            location: Location { start: 208, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 100,
            location: Location { start: 208, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(96),
                    ],
                },
            ),
        },
        Node {
            identifier: 99,
            location: Location { start: 201, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(95),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(12),
                    message_loc: Some(
                        Location { start: 205, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(97),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 101,
            location: Location { start: 211, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 102,
            location: Location { start: 211, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(99),
                    ),
                    right: None,
                    operator_loc: Location { start: 212, length: 2 },
                },
            ),
        },
        Node {
            identifier: 103,
            location: Location { start: 218, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 105,
            location: Location { start: 218, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(101),
                    ],
                },
            ),
        },
        Node {
            identifier: 104,
            location: Location { start: 211, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(100),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(13),
                    message_loc: Some(
                        Location { start: 215, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(102),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 106,
            location: Location { start: 221, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 107,
            location: Location { start: 221, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(104),
                    ),
                    right: None,
                    operator_loc: Location { start: 222, length: 2 },
                },
            ),
        },
        Node {
            identifier: 108,
            location: Location { start: 228, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 110,
            location: Location { start: 228, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(106),
                    ],
                },
            ),
        },
        Node {
            identifier: 109,
            location: Location { start: 221, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(105),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(14),
                    message_loc: Some(
                        Location { start: 225, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(107),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 111,
            location: Location { start: 231, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 112,
            location: Location { start: 231, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(109),
                    ),
                    right: None,
                    operator_loc: Location { start: 232, length: 2 },
                },
            ),
        },
        Node {
            identifier: 113,
            location: Location { start: 238, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 115,
            location: Location { start: 238, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(111),
                    ],
                },
            ),
        },
        Node {
            identifier: 114,
            location: Location { start: 231, length: 8 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(110),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(15),
                    message_loc: Some(
                        Location { start: 235, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(112),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 116,
            location: Location { start: 241, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 117,
            location: Location { start: 247, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 118,
            location: Location { start: 245, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: Some(
                        NodeRef(115),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(16),
                    message_loc: Some(
                        Location { start: 245, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 119,
            location: Location { start: 241, length: 7 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(114),
                    ),
                    right: Some(
                        NodeRef(116),
                    ),
                    operator_loc: Location { start: 242, length: 2 },
                },
            ),
        },
        Node {
            identifier: 120,
            location: Location { start: 250, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 121,
            location: Location { start: 256, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 122,
            location: Location { start: 254, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: Some(
                        NodeRef(119),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(17),
                    message_loc: Some(
                        Location { start: 254, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 123,
            location: Location { start: 250, length: 7 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b1,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(118),
                    ),
                    right: Some(
                        NodeRef(120),
                    ),
                    operator_loc: Location { start: 251, length: 2 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 257 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(3),
                        NodeRef(7),
                        NodeRef(16),
                        NodeRef(19),
                        NodeRef(24),
                        NodeRef(29),
                        NodeRef(33),
                        NodeRef(36),
                        NodeRef(41),
                        NodeRef(45),
                        NodeRef(49),
                        NodeRef(53),
                        NodeRef(58),
                        NodeRef(63),
                        NodeRef(68),
                        NodeRef(73),
                        NodeRef(78),
                        NodeRef(83),
                        NodeRef(88),
                        NodeRef(93),
                        NodeRef(98),
                        NodeRef(103),
                        NodeRef(108),
                        NodeRef(113),
                        NodeRef(117),
                        NodeRef(121),
                    ],
                },
            ),
        },
        Node {
            identifier: 124,
            location: Location { start: 0, length: 257 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(122),
                },
            ),
        },
    ],
    constants: [
        Owned(15, 3),
        Shared(0, 2),
        Owned(57, 3),
        Owned(125, 2),
        Owned(135, 2),
        Owned(145, 3),
        Owned(156, 3),
        Owned(167, 2),
        Owned(177, 2),
        Owned(187, 1),
        Owned(196, 1),
        Owned(205, 2),
        Owned(215, 2),
        Owned(225, 2),
        Owned(235, 2),
        Shared(0, 2),
        Shared(0, 2),
    ],
    content_pool: [
        43,
        64,
        45,
        64,
        91,
        93,
    ],
}
