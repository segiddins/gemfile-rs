Program {
    source: "alias :foo :bar\n\nalias %s[abc] %s[def]\n\nalias :'abc' :'def'\n\nalias :\"abc#{1}\" :'def'\n\nalias $a $'\n\nalias foo bar\n\nalias $foo $bar\n\nalias foo if\n\nalias foo <=>\n\nalias :== :eql?\n\nalias A B\n\nalias :A :B\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            16,
            17,
            39,
            40,
            60,
            61,
            85,
            86,
            98,
            99,
            113,
            114,
            130,
            131,
            144,
            145,
            159,
            160,
            176,
            177,
            187,
            188,
            200,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 554,
        content_pool_size: 4,
    },
    root: NodeRef(41),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 6, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 6, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 7, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(7, 3),
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 11, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 11, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 12, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(12, 3),
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 0, length: 15 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(0),
                    old_name: NodeRef(1),
                    keyword_loc: Location { start: 0, length: 5 },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 23, length: 7 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 23, length: 3 },
                    ),
                    value_loc: Some(
                        Location { start: 26, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 29, length: 1 },
                    ),
                    unescaped: Shared(26, 3),
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 31, length: 7 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 31, length: 3 },
                    ),
                    value_loc: Some(
                        Location { start: 34, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 37, length: 1 },
                    ),
                    unescaped: Shared(34, 3),
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 17, length: 21 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(3),
                    old_name: NodeRef(4),
                    keyword_loc: Location { start: 17, length: 5 },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 46, length: 6 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 46, length: 2 },
                    ),
                    value_loc: Some(
                        Location { start: 48, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 51, length: 1 },
                    ),
                    unescaped: Shared(48, 3),
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 53, length: 6 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 53, length: 2 },
                    ),
                    value_loc: Some(
                        Location { start: 55, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 58, length: 1 },
                    ),
                    unescaped: Shared(55, 3),
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 40, length: 19 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(6),
                    old_name: NodeRef(7),
                    keyword_loc: Location { start: 40, length: 5 },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 69, length: 3 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FROZEN,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 69, length: 3 },
                    closing_loc: None,
                    unescaped: Shared(69, 3),
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 74, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 74, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 72, length: 4 },
            node_kind: EmbeddedStatementsNode(
                EmbeddedStatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Location { start: 72, length: 2 },
                    statements: Some(
                        NodeRef(11),
                    ),
                    closing_loc: Location { start: 75, length: 1 },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 67, length: 10 },
            node_kind: InterpolatedSymbolNode(
                InterpolatedSymbolNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 67, length: 2 },
                    ),
                    parts: [
                        NodeRef(9),
                        NodeRef(12),
                    ],
                    closing_loc: Some(
                        Location { start: 76, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 78, length: 6 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 78, length: 2 },
                    ),
                    value_loc: Some(
                        Location { start: 80, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 83, length: 1 },
                    ),
                    unescaped: Shared(80, 3),
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 61, length: 23 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(13),
                    old_name: NodeRef(14),
                    keyword_loc: Location { start: 61, length: 5 },
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 92, length: 2 },
            node_kind: GlobalVariableReadNode(
                GlobalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 95, length: 2 },
            node_kind: BackReferenceReadNode(
                BackReferenceReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 86, length: 11 },
            node_kind: AliasGlobalVariableNode(
                AliasGlobalVariableNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(16),
                    old_name: NodeRef(17),
                    keyword_loc: Location { start: 86, length: 5 },
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 105, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 105, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(105, 3),
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 109, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 109, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(109, 3),
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 99, length: 13 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(19),
                    old_name: NodeRef(20),
                    keyword_loc: Location { start: 99, length: 5 },
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 120, length: 4 },
            node_kind: GlobalVariableReadNode(
                GlobalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(3),
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 125, length: 4 },
            node_kind: GlobalVariableReadNode(
                GlobalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(4),
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 114, length: 15 },
            node_kind: AliasGlobalVariableNode(
                AliasGlobalVariableNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(22),
                    old_name: NodeRef(23),
                    keyword_loc: Location { start: 114, length: 5 },
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 137, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 137, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(137, 3),
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 141, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 141, length: 2 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(141, 2),
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 131, length: 12 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(25),
                    old_name: NodeRef(26),
                    keyword_loc: Location { start: 131, length: 5 },
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 151, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 151, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(151, 3),
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 155, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 155, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(155, 3),
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 145, length: 13 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(28),
                    old_name: NodeRef(29),
                    keyword_loc: Location { start: 145, length: 5 },
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 166, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 166, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 167, length: 2 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(167, 2),
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 170, length: 5 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 170, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 171, length: 4 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(171, 4),
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 160, length: 15 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(31),
                    old_name: NodeRef(32),
                    keyword_loc: Location { start: 160, length: 5 },
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 183, length: 1 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 183, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(183, 1),
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 185, length: 1 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 185, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(185, 1),
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 177, length: 9 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(34),
                    old_name: NodeRef(35),
                    keyword_loc: Location { start: 177, length: 5 },
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 194, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 194, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 195, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(195, 1),
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 197, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 197, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 198, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(198, 1),
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 188, length: 11 },
            node_kind: AliasMethodNode(
                AliasMethodNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    new_name: NodeRef(37),
                    old_name: NodeRef(38),
                    keyword_loc: Location { start: 188, length: 5 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 199 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(2),
                        NodeRef(5),
                        NodeRef(8),
                        NodeRef(15),
                        NodeRef(18),
                        NodeRef(21),
                        NodeRef(24),
                        NodeRef(27),
                        NodeRef(30),
                        NodeRef(33),
                        NodeRef(36),
                        NodeRef(39),
                    ],
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 0, length: 199 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(40),
                },
            ),
        },
    ],
    constants: [
        Owned(92, 2),
        Owned(95, 2),
        Owned(120, 4),
        Owned(125, 4),
    ],
    content_pool: [],
}
