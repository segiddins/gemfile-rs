Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            27,
            34,
            35,
            37,
            65,
            73,
            75,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 295,
                message: "ambiguous `/`; wrap regexp in parentheses or add a space after `/` operator",
                location: Location { start: 15, length: 1 },
                level: 1,
            },
            Warning {
                type: 295,
                message: "ambiguous `/`; wrap regexp in parentheses or add a space after `/` operator",
                location: Location { start: 52, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 349,
        content_pool_size: 1,
    },
    root: NodeRef(11),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 0, length: 9 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 0, length: 9 },
                    ),
                    content_loc: Location { start: 27, length: 0 },
                    closing_loc: Some(
                        Location { start: 27, length: 7 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 15, length: 6 },
            node_kind: RegularExpressionNode(
                RegularExpressionNode {
                    flags: BitFlags<RegularExpressionFlags> {
                        bits: 0b10,
                        flags: EXTENDED,
                    },
                    opening_loc: Location { start: 15, length: 1 },
                    content_loc: Location { start: 16, length: 4 },
                    closing_loc: Location { start: 20, length: 1 },
                    unescaped: "^\\s{",
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 23, length: 2 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 23, length: 1 },
                    ),
                    content_loc: Location { start: 24, length: 0 },
                    closing_loc: Some(
                        Location { start: 24, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 15, length: 10 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(1),
                        NodeRef(2),
                    ],
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 0, length: 25 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(0),
                    ),
                    call_operator_loc: Some(
                        Location { start: 9, length: 1 },
                    ),
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 10, length: 4 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(3),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 37, length: 9 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 37, length: 9 },
                    ),
                    content_loc: Location { start: 65, length: 0 },
                    closing_loc: Some(
                        Location { start: 65, length: 8 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 52, length: 6 },
            node_kind: RegularExpressionNode(
                RegularExpressionNode {
                    flags: BitFlags<RegularExpressionFlags> {
                        bits: 0b10,
                        flags: EXTENDED,
                    },
                    opening_loc: Location { start: 52, length: 1 },
                    content_loc: Location { start: 53, length: 4 },
                    closing_loc: Location { start: 57, length: 1 },
                    unescaped: "^\\s{",
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 60, length: 2 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 60, length: 1 },
                    ),
                    content_loc: Location { start: 61, length: 0 },
                    closing_loc: Some(
                        Location { start: 61, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 52, length: 10 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(6),
                        NodeRef(7),
                    ],
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 37, length: 25 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(5),
                    ),
                    call_operator_loc: Some(
                        Location { start: 46, length: 1 },
                    ),
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 47, length: 4 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(8),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 62 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(4),
                        NodeRef(9),
                    ],
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 0, length: 62 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(10),
                },
            ),
        },
    ],
    constants: [
        Owned(10, 4),
    ],
    content_pool: [],
}
