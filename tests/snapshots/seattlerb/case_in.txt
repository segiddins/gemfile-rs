Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            8,
            18,
            22,
            23,
            31,
            42,
            46,
            47,
            55,
            66,
            70,
            71,
            79,
            90,
            94,
            95,
            103,
            114,
            118,
            119,
            127,
            138,
            142,
            143,
            151,
            161,
            165,
            166,
            174,
            184,
            188,
            189,
            197,
            208,
            212,
            213,
            221,
            229,
            233,
            234,
            242,
            251,
            255,
            256,
            264,
            276,
            280,
            281,
            289,
            303,
            307,
            308,
            316,
            328,
            332,
            333,
            341,
            353,
            357,
            358,
            366,
            391,
            395,
            396,
            404,
            429,
            433,
            434,
            442,
            465,
            469,
            470,
            478,
            507,
            511,
            512,
            520,
            533,
            537,
            538,
            546,
            569,
            573,
            574,
            582,
            588,
            592,
            593,
            601,
            611,
            615,
            616,
            624,
            644,
            648,
            649,
            657,
            670,
            674,
            675,
            683,
            700,
            704,
            705,
            713,
            725,
            729,
            730,
            738,
            744,
            748,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - lhs",
                location: Location { start: 377, length: 3 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - x",
                location: Location { start: 382, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - c",
                location: Location { start: 462, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - b",
                location: Location { start: 13, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - rhs",
                location: Location { start: 386, length: 3 },
                level: 1,
            },
        ],
        content_pool_offset: 2992,
        content_pool_size: 14,
    },
    root: NodeRef(196),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 5, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 5, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 6, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 12, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 12, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 14, length: 2 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 13, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 13, length: 1 },
            node_kind: ImplicitNode(
                ImplicitNode {
                    value: NodeRef(2),
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 12, length: 4 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(1),
                    value: NodeRef(3),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 12, length: 4 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [
                        NodeRef(4),
                    ],
                    rest: None,
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 8, length: 8 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(5),
                    statements: None,
                    in_loc: Location { start: 8, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 21 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(0),
                    ),
                    conditions: [
                        NodeRef(6),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 0, length: 4 },
                    end_keyword_loc: Location { start: 18, length: 3 },
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 28, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 28, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 29, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 37, length: 1 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 37, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 39, length: 1 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 39, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 34, length: 7 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(9),
                        NodeRef(10),
                    ],
                    opening_loc: Some(
                        Location { start: 34, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 40, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 31, length: 10 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(11),
                    statements: None,
                    in_loc: Location { start: 31, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 23, length: 22 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(8),
                    ),
                    conditions: [
                        NodeRef(12),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 23, length: 4 },
                    end_keyword_loc: Location { start: 42, length: 3 },
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 52, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 52, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 53, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 61, length: 1 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 61, length: 1 },
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 63, length: 1 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 63, length: 1 },
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 58, length: 7 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(15),
                        NodeRef(16),
                    ],
                    opening_loc: Some(
                        Location { start: 58, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 64, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 55, length: 10 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(17),
                    statements: None,
                    in_loc: Location { start: 55, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 47, length: 22 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(14),
                    ),
                    conditions: [
                        NodeRef(18),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 47, length: 4 },
                    end_keyword_loc: Location { start: 66, length: 3 },
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 76, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 76, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 77, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 85, length: 1 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 85, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 87, length: 1 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 87, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 82, length: 7 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(21),
                        NodeRef(22),
                    ],
                    opening_loc: Some(
                        Location { start: 82, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 88, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 79, length: 10 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(23),
                    statements: None,
                    in_loc: Location { start: 79, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 71, length: 22 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(20),
                    ),
                    conditions: [
                        NodeRef(24),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 71, length: 4 },
                    end_keyword_loc: Location { start: 90, length: 3 },
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 100, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 100, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 101, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 109, length: 1 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 109, length: 1 },
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 111, length: 1 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 111, length: 1 },
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 106, length: 7 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(27),
                        NodeRef(28),
                    ],
                    opening_loc: Some(
                        Location { start: 106, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 112, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 103, length: 10 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(29),
                    statements: None,
                    in_loc: Location { start: 103, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 95, length: 22 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(26),
                    ),
                    conditions: [
                        NodeRef(30),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 95, length: 4 },
                    end_keyword_loc: Location { start: 114, length: 3 },
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 124, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 124, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 125, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 134, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 131, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(33),
                    ),
                    operator_loc: Location { start: 131, length: 3 },
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 130, length: 7 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(34),
                    ),
                    opening_loc: Location { start: 130, length: 1 },
                    closing_loc: Location { start: 136, length: 1 },
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 127, length: 10 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(35),
                    statements: None,
                    in_loc: Location { start: 127, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 119, length: 22 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(32),
                    ),
                    conditions: [
                        NodeRef(36),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 119, length: 4 },
                    end_keyword_loc: Location { start: 138, length: 3 },
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 148, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 148, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 149, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 157, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 155, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(39),
                    ),
                    operator_loc: Location { start: 155, length: 2 },
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 154, length: 6 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(40),
                    ),
                    opening_loc: Location { start: 154, length: 1 },
                    closing_loc: Location { start: 159, length: 1 },
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 151, length: 9 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(41),
                    statements: None,
                    in_loc: Location { start: 151, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 143, length: 21 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(38),
                    ),
                    conditions: [
                        NodeRef(42),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 143, length: 4 },
                    end_keyword_loc: Location { start: 161, length: 3 },
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 171, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 171, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 172, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 48,
            location: Location { start: 178, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 49,
            location: Location { start: 178, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(45),
                    ),
                    right: None,
                    operator_loc: Location { start: 179, length: 3 },
                },
            ),
        },
        Node {
            identifier: 50,
            location: Location { start: 177, length: 6 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(46),
                    ),
                    opening_loc: Location { start: 177, length: 1 },
                    closing_loc: Location { start: 182, length: 1 },
                },
            ),
        },
        Node {
            identifier: 51,
            location: Location { start: 174, length: 9 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(47),
                    statements: None,
                    in_loc: Location { start: 174, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 47,
            location: Location { start: 166, length: 21 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(44),
                    ),
                    conditions: [
                        NodeRef(48),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 166, length: 4 },
                    end_keyword_loc: Location { start: 184, length: 3 },
                },
            ),
        },
        Node {
            identifier: 52,
            location: Location { start: 194, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 194, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 195, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 54,
            location: Location { start: 201, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 55,
            location: Location { start: 205, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            3,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 56,
            location: Location { start: 201, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(51),
                    ),
                    right: Some(
                        NodeRef(52),
                    ),
                    operator_loc: Location { start: 202, length: 3 },
                },
            ),
        },
        Node {
            identifier: 57,
            location: Location { start: 200, length: 7 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(53),
                    ),
                    opening_loc: Location { start: 200, length: 1 },
                    closing_loc: Location { start: 206, length: 1 },
                },
            ),
        },
        Node {
            identifier: 58,
            location: Location { start: 197, length: 10 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(54),
                    statements: None,
                    in_loc: Location { start: 197, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 53,
            location: Location { start: 189, length: 22 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(50),
                    ),
                    conditions: [
                        NodeRef(55),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 189, length: 4 },
                    end_keyword_loc: Location { start: 208, length: 3 },
                },
            ),
        },
        Node {
            identifier: 59,
            location: Location { start: 218, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 218, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 219, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 61,
            location: Location { start: 225, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            42,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 62,
            location: Location { start: 224, length: 4 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(58),
                    ),
                    opening_loc: Location { start: 224, length: 1 },
                    closing_loc: Location { start: 227, length: 1 },
                },
            ),
        },
        Node {
            identifier: 63,
            location: Location { start: 221, length: 7 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(59),
                    statements: None,
                    in_loc: Location { start: 221, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 60,
            location: Location { start: 213, length: 19 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(57),
                    ),
                    conditions: [
                        NodeRef(60),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 213, length: 4 },
                    end_keyword_loc: Location { start: 229, length: 3 },
                },
            ),
        },
        Node {
            identifier: 64,
            location: Location { start: 239, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 239, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 240, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 66,
            location: Location { start: 245, length: 5 },
            node_kind: NoKeywordsParameterNode(
                NoKeywordsParameterNode {
                    operator_loc: Location { start: 245, length: 2 },
                    keyword_loc: Location { start: 247, length: 3 },
                },
            ),
        },
        Node {
            identifier: 67,
            location: Location { start: 245, length: 5 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [],
                    rest: Some(
                        NodeRef(63),
                    ),
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 68,
            location: Location { start: 242, length: 8 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(64),
                    statements: None,
                    in_loc: Location { start: 242, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 65,
            location: Location { start: 234, length: 20 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(62),
                    ),
                    conditions: [
                        NodeRef(65),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 234, length: 4 },
                    end_keyword_loc: Location { start: 251, length: 3 },
                },
            ),
        },
        Node {
            identifier: 69,
            location: Location { start: 261, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 261, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 262, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 71,
            location: Location { start: 267, length: 8 },
            node_kind: RegularExpressionNode(
                RegularExpressionNode {
                    flags: BitFlags<RegularExpressionFlags> {
                        bits: 0b10,
                        flags: EXTENDED,
                    },
                    opening_loc: Location { start: 267, length: 1 },
                    content_loc: Location { start: 268, length: 6 },
                    closing_loc: Location { start: 274, length: 1 },
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 72,
            location: Location { start: 264, length: 11 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(68),
                    statements: None,
                    in_loc: Location { start: 264, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 70,
            location: Location { start: 256, length: 23 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(67),
                    ),
                    conditions: [
                        NodeRef(69),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 256, length: 4 },
                    end_keyword_loc: Location { start: 276, length: 3 },
                },
            ),
        },
        Node {
            identifier: 73,
            location: Location { start: 286, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 286, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 287, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 75,
            location: Location { start: 292, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 292, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 293, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 76,
            location: Location { start: 297, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 77,
            location: Location { start: 296, length: 2 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 296, length: 1 },
                    expression: Some(
                        NodeRef(73),
                    ),
                },
            ),
        },
        Node {
            identifier: 78,
            location: Location { start: 300, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 300, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 301, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 79,
            location: Location { start: 292, length: 10 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(72),
                    ],
                    rest: Some(
                        NodeRef(74),
                    ),
                    posts: [
                        NodeRef(75),
                    ],
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 80,
            location: Location { start: 289, length: 13 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(76),
                    statements: None,
                    in_loc: Location { start: 289, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 74,
            location: Location { start: 281, length: 25 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(71),
                    ),
                    conditions: [
                        NodeRef(77),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 281, length: 4 },
                    end_keyword_loc: Location { start: 303, length: 3 },
                },
            ),
        },
        Node {
            identifier: 81,
            location: Location { start: 313, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 313, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 314, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 83,
            location: Location { start: 319, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 319, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 320, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 84,
            location: Location { start: 324, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 324, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 325, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 85,
            location: Location { start: 323, length: 4 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(81),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 323, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 326, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 86,
            location: Location { start: 319, length: 8 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(80),
                        NodeRef(82),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 87,
            location: Location { start: 316, length: 11 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(83),
                    statements: None,
                    in_loc: Location { start: 316, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 82,
            location: Location { start: 308, length: 23 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(79),
                    ),
                    conditions: [
                        NodeRef(84),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 308, length: 4 },
                    end_keyword_loc: Location { start: 328, length: 3 },
                },
            ),
        },
        Node {
            identifier: 88,
            location: Location { start: 338, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 338, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 339, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 90,
            location: Location { start: 344, length: 6 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(3),
                },
            ),
        },
        Node {
            identifier: 91,
            location: Location { start: 344, length: 8 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: Some(
                        NodeRef(87),
                    ),
                    requireds: [],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 350, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 351, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 92,
            location: Location { start: 341, length: 11 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(88),
                    statements: None,
                    in_loc: Location { start: 341, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 89,
            location: Location { start: 333, length: 23 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(86),
                    ),
                    conditions: [
                        NodeRef(89),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 333, length: 4 },
                    end_keyword_loc: Location { start: 353, length: 3 },
                },
            ),
        },
        Node {
            identifier: 93,
            location: Location { start: 363, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 363, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 364, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 95,
            location: Location { start: 369, length: 6 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(3),
                },
            ),
        },
        Node {
            identifier: 96,
            location: Location { start: 377, length: 3 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(4),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 97,
            location: Location { start: 376, length: 4 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 376, length: 1 },
                    expression: Some(
                        NodeRef(93),
                    ),
                },
            ),
        },
        Node {
            identifier: 98,
            location: Location { start: 382, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 99,
            location: Location { start: 386, length: 3 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(6),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 100,
            location: Location { start: 385, length: 4 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 385, length: 1 },
                    expression: Some(
                        NodeRef(96),
                    ),
                },
            ),
        },
        Node {
            identifier: 101,
            location: Location { start: 369, length: 21 },
            node_kind: FindPatternNode(
                FindPatternNode {
                    constant: Some(
                        NodeRef(92),
                    ),
                    left: NodeRef(94),
                    requireds: [
                        NodeRef(95),
                    ],
                    right: NodeRef(97),
                    opening_loc: Some(
                        Location { start: 375, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 389, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 102,
            location: Location { start: 366, length: 24 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(98),
                    statements: None,
                    in_loc: Location { start: 366, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 94,
            location: Location { start: 358, length: 36 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(91),
                    ),
                    conditions: [
                        NodeRef(99),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 358, length: 4 },
                    end_keyword_loc: Location { start: 391, length: 3 },
                },
            ),
        },
        Node {
            identifier: 103,
            location: Location { start: 401, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 401, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 402, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 105,
            location: Location { start: 407, length: 6 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(3),
                },
            ),
        },
        Node {
            identifier: 106,
            location: Location { start: 415, length: 3 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(4),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 107,
            location: Location { start: 414, length: 4 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 414, length: 1 },
                    expression: Some(
                        NodeRef(103),
                    ),
                },
            ),
        },
        Node {
            identifier: 108,
            location: Location { start: 420, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 109,
            location: Location { start: 424, length: 3 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(6),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 110,
            location: Location { start: 423, length: 4 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 423, length: 1 },
                    expression: Some(
                        NodeRef(106),
                    ),
                },
            ),
        },
        Node {
            identifier: 111,
            location: Location { start: 407, length: 21 },
            node_kind: FindPatternNode(
                FindPatternNode {
                    constant: Some(
                        NodeRef(102),
                    ),
                    left: NodeRef(104),
                    requireds: [
                        NodeRef(105),
                    ],
                    right: NodeRef(107),
                    opening_loc: Some(
                        Location { start: 413, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 427, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 112,
            location: Location { start: 404, length: 24 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(108),
                    statements: None,
                    in_loc: Location { start: 404, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 104,
            location: Location { start: 396, length: 36 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(101),
                    ),
                    conditions: [
                        NodeRef(109),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 396, length: 4 },
                    end_keyword_loc: Location { start: 429, length: 3 },
                },
            ),
        },
        Node {
            identifier: 113,
            location: Location { start: 439, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 439, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 440, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 116,
            location: Location { start: 449, length: 1 },
            node_kind: RequiredParameterNode(
                RequiredParameterNode {
                    flags: BitFlags<ParameterFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                },
            ),
        },
        Node {
            identifier: 115,
            location: Location { start: 449, length: 1 },
            node_kind: ParametersNode(
                ParametersNode {
                    requireds: [
                        NodeRef(112),
                    ],
                    optionals: [],
                    rest: None,
                    posts: [],
                    keywords: [],
                    keyword_rest: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 117,
            location: Location { start: 448, length: 3 },
            node_kind: BlockParametersNode(
                BlockParametersNode {
                    parameters: Some(
                        NodeRef(113),
                    ),
                    locals: [],
                    opening_loc: Some(
                        Location { start: 448, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 450, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 119,
            location: Location { start: 454, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 118,
            location: Location { start: 454, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(115),
                    ],
                },
            ),
        },
        Node {
            identifier: 120,
            location: Location { start: 446, length: 14 },
            node_kind: LambdaNode(
                LambdaNode {
                    locals: [
                        ConstantRef(1),
                    ],
                    operator_loc: Location { start: 446, length: 2 },
                    opening_loc: Location { start: 452, length: 1 },
                    closing_loc: Location { start: 459, length: 1 },
                    parameters: Some(
                        NodeRef(114),
                    ),
                    body: Some(
                        NodeRef(116),
                    ),
                },
            ),
        },
        Node {
            identifier: 121,
            location: Location { start: 462, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(7),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 122,
            location: Location { start: 445, length: 19 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(117),
                        NodeRef(118),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 445, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 463, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 123,
            location: Location { start: 442, length: 22 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(119),
                    statements: None,
                    in_loc: Location { start: 442, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 114,
            location: Location { start: 434, length: 34 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(111),
                    ),
                    conditions: [
                        NodeRef(120),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 434, length: 4 },
                    end_keyword_loc: Location { start: 465, length: 3 },
                },
            ),
        },
        Node {
            identifier: 124,
            location: Location { start: 475, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 475, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 476, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 126,
            location: Location { start: 482, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 482, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 483, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 127,
            location: Location { start: 486, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 128,
            location: Location { start: 489, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(7),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 129,
            location: Location { start: 493, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 493, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 494, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 130,
            location: Location { start: 498, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(8),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 131,
            location: Location { start: 497, length: 2 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 497, length: 1 },
                    expression: Some(
                        NodeRef(127),
                    ),
                },
            ),
        },
        Node {
            identifier: 132,
            location: Location { start: 501, length: 3 },
            node_kind: NilNode(
                NilNode,
            ),
        },
        Node {
            identifier: 133,
            location: Location { start: 492, length: 13 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(126),
                    ],
                    rest: Some(
                        NodeRef(128),
                    ),
                    posts: [
                        NodeRef(129),
                    ],
                    opening_loc: Some(
                        Location { start: 492, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 504, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 134,
            location: Location { start: 481, length: 25 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(123),
                        NodeRef(124),
                        NodeRef(125),
                        NodeRef(130),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 481, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 505, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 135,
            location: Location { start: 478, length: 28 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(131),
                    statements: None,
                    in_loc: Location { start: 478, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 125,
            location: Location { start: 470, length: 40 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(122),
                    ),
                    conditions: [
                        NodeRef(132),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 470, length: 4 },
                    end_keyword_loc: Location { start: 507, length: 3 },
                },
            ),
        },
        Node {
            identifier: 136,
            location: Location { start: 517, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 517, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 518, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 138,
            location: Location { start: 524, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(9),
                },
            ),
        },
        Node {
            identifier: 139,
            location: Location { start: 527, length: 1 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 527, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 140,
            location: Location { start: 530, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(10),
                },
            ),
        },
        Node {
            identifier: 141,
            location: Location { start: 523, length: 9 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(135),
                    ],
                    rest: Some(
                        NodeRef(136),
                    ),
                    posts: [
                        NodeRef(137),
                    ],
                    opening_loc: Some(
                        Location { start: 523, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 531, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 142,
            location: Location { start: 520, length: 12 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(138),
                    statements: None,
                    in_loc: Location { start: 520, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 137,
            location: Location { start: 512, length: 24 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(134),
                    ),
                    conditions: [
                        NodeRef(139),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 512, length: 4 },
                    end_keyword_loc: Location { start: 533, length: 3 },
                },
            ),
        },
        Node {
            identifier: 143,
            location: Location { start: 543, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 543, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 544, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 145,
            location: Location { start: 551, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 551, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 552, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 146,
            location: Location { start: 555, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(7),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 147,
            location: Location { start: 550, length: 7 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(142),
                        NodeRef(143),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 550, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 556, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 148,
            location: Location { start: 560, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 560, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 561, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 149,
            location: Location { start: 565, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    name: ConstantRef(8),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 150,
            location: Location { start: 564, length: 2 },
            node_kind: PinnedVariableNode(
                PinnedVariableNode {
                    variable: NodeRef(146),
                    operator_loc: Location { start: 564, length: 1 },
                },
            ),
        },
        Node {
            identifier: 151,
            location: Location { start: 559, length: 8 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(145),
                        NodeRef(147),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 559, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 566, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 152,
            location: Location { start: 549, length: 19 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(144),
                        NodeRef(148),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 549, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 567, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 153,
            location: Location { start: 546, length: 22 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(149),
                    statements: None,
                    in_loc: Location { start: 546, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 144,
            location: Location { start: 538, length: 34 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(141),
                    ),
                    conditions: [
                        NodeRef(150),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 538, length: 4 },
                    end_keyword_loc: Location { start: 569, length: 3 },
                },
            ),
        },
        Node {
            identifier: 154,
            location: Location { start: 579, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 579, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 580, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 156,
            location: Location { start: 585, length: 2 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 585, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 586, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 157,
            location: Location { start: 582, length: 5 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(153),
                    statements: None,
                    in_loc: Location { start: 582, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 155,
            location: Location { start: 574, length: 17 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(152),
                    ),
                    conditions: [
                        NodeRef(154),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 574, length: 4 },
                    end_keyword_loc: Location { start: 588, length: 3 },
                },
            ),
        },
        Node {
            identifier: 158,
            location: Location { start: 598, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 598, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 599, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 160,
            location: Location { start: 607, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(11),
                    message_loc: Some(
                        Location { start: 607, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 161,
            location: Location { start: 605, length: 4 },
            node_kind: PinnedExpressionNode(
                PinnedExpressionNode {
                    expression: NodeRef(157),
                    operator_loc: Location { start: 605, length: 1 },
                    lparen_loc: Location { start: 606, length: 1 },
                    rparen_loc: Location { start: 608, length: 1 },
                },
            ),
        },
        Node {
            identifier: 162,
            location: Location { start: 604, length: 6 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(158),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 604, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 609, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 163,
            location: Location { start: 601, length: 9 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(159),
                    statements: None,
                    in_loc: Location { start: 601, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 159,
            location: Location { start: 593, length: 21 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(156),
                    ),
                    conditions: [
                        NodeRef(160),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 593, length: 4 },
                    end_keyword_loc: Location { start: 611, length: 3 },
                },
            ),
        },
        Node {
            identifier: 164,
            location: Location { start: 621, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 621, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 622, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 166,
            location: Location { start: 629, length: 2 },
            node_kind: InstanceVariableReadNode(
                InstanceVariableReadNode {
                    name: ConstantRef(12),
                },
            ),
        },
        Node {
            identifier: 167,
            location: Location { start: 628, length: 3 },
            node_kind: PinnedVariableNode(
                PinnedVariableNode {
                    variable: NodeRef(163),
                    operator_loc: Location { start: 628, length: 1 },
                },
            ),
        },
        Node {
            identifier: 168,
            location: Location { start: 634, length: 2 },
            node_kind: GlobalVariableReadNode(
                GlobalVariableReadNode {
                    name: ConstantRef(13),
                },
            ),
        },
        Node {
            identifier: 169,
            location: Location { start: 633, length: 3 },
            node_kind: PinnedVariableNode(
                PinnedVariableNode {
                    variable: NodeRef(165),
                    operator_loc: Location { start: 633, length: 1 },
                },
            ),
        },
        Node {
            identifier: 170,
            location: Location { start: 639, length: 3 },
            node_kind: ClassVariableReadNode(
                ClassVariableReadNode {
                    name: ConstantRef(14),
                },
            ),
        },
        Node {
            identifier: 171,
            location: Location { start: 638, length: 4 },
            node_kind: PinnedVariableNode(
                PinnedVariableNode {
                    variable: NodeRef(167),
                    operator_loc: Location { start: 638, length: 1 },
                },
            ),
        },
        Node {
            identifier: 172,
            location: Location { start: 627, length: 16 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(164),
                        NodeRef(166),
                        NodeRef(168),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 627, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 642, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 173,
            location: Location { start: 624, length: 19 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(169),
                    statements: None,
                    in_loc: Location { start: 624, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 165,
            location: Location { start: 616, length: 31 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(162),
                    ),
                    conditions: [
                        NodeRef(170),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 616, length: 4 },
                    end_keyword_loc: Location { start: 644, length: 3 },
                },
            ),
        },
        Node {
            identifier: 174,
            location: Location { start: 654, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 654, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 655, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 176,
            location: Location { start: 660, length: 9 },
            node_kind: XStringNode(
                XStringNode {
                    flags: BitFlags<EncodingFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Location { start: 660, length: 1 },
                    content_loc: Location { start: 661, length: 7 },
                    closing_loc: Location { start: 668, length: 1 },
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 177,
            location: Location { start: 657, length: 12 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(173),
                    statements: None,
                    in_loc: Location { start: 657, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 175,
            location: Location { start: 649, length: 24 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(172),
                    ),
                    conditions: [
                        NodeRef(174),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 649, length: 4 },
                    end_keyword_loc: Location { start: 670, length: 3 },
                },
            ),
        },
        Node {
            identifier: 178,
            location: Location { start: 680, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 680, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 681, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 180,
            location: Location { start: 686, length: 3 },
            node_kind: NilNode(
                NilNode,
            ),
        },
        Node {
            identifier: 181,
            location: Location { start: 691, length: 3 },
            node_kind: NilNode(
                NilNode,
            ),
        },
        Node {
            identifier: 182,
            location: Location { start: 696, length: 3 },
            node_kind: NilNode(
                NilNode,
            ),
        },
        Node {
            identifier: 183,
            location: Location { start: 686, length: 13 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(177),
                        NodeRef(178),
                        NodeRef(179),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 184,
            location: Location { start: 683, length: 16 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(180),
                    statements: None,
                    in_loc: Location { start: 683, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 179,
            location: Location { start: 675, length: 28 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(176),
                    ),
                    conditions: [
                        NodeRef(181),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 675, length: 4 },
                    end_keyword_loc: Location { start: 700, length: 3 },
                },
            ),
        },
        Node {
            identifier: 185,
            location: Location { start: 710, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 710, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 711, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 187,
            location: Location { start: 718, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 718, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 719, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 720, length: 2 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 188,
            location: Location { start: 719, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 189,
            location: Location { start: 719, length: 1 },
            node_kind: ImplicitNode(
                ImplicitNode {
                    value: NodeRef(185),
                },
            ),
        },
        Node {
            identifier: 190,
            location: Location { start: 718, length: 4 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(184),
                    value: NodeRef(186),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 191,
            location: Location { start: 716, length: 8 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [
                        NodeRef(187),
                    ],
                    rest: None,
                    opening_loc: Some(
                        Location { start: 716, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 723, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 192,
            location: Location { start: 713, length: 11 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(188),
                    statements: None,
                    in_loc: Location { start: 713, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 186,
            location: Location { start: 705, length: 23 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(183),
                    ),
                    conditions: [
                        NodeRef(189),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 705, length: 4 },
                    end_keyword_loc: Location { start: 725, length: 3 },
                },
            ),
        },
        Node {
            identifier: 193,
            location: Location { start: 735, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 735, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 736, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 195,
            location: Location { start: 741, length: 2 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [],
                    rest: None,
                    opening_loc: Some(
                        Location { start: 741, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 742, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 196,
            location: Location { start: 738, length: 5 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(192),
                    statements: None,
                    in_loc: Location { start: 738, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 194,
            location: Location { start: 730, length: 17 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(191),
                    ),
                    conditions: [
                        NodeRef(193),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 730, length: 4 },
                    end_keyword_loc: Location { start: 744, length: 3 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 747 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(7),
                        NodeRef(13),
                        NodeRef(19),
                        NodeRef(25),
                        NodeRef(31),
                        NodeRef(37),
                        NodeRef(43),
                        NodeRef(49),
                        NodeRef(56),
                        NodeRef(61),
                        NodeRef(66),
                        NodeRef(70),
                        NodeRef(78),
                        NodeRef(85),
                        NodeRef(90),
                        NodeRef(100),
                        NodeRef(110),
                        NodeRef(121),
                        NodeRef(133),
                        NodeRef(140),
                        NodeRef(151),
                        NodeRef(155),
                        NodeRef(161),
                        NodeRef(171),
                        NodeRef(175),
                        NodeRef(182),
                        NodeRef(190),
                        NodeRef(194),
                    ],
                },
            ),
        },
        Node {
            identifier: 197,
            location: Location { start: 0, length: 747 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [
                        ConstantRef(1),
                        ConstantRef(2),
                        ConstantRef(4),
                        ConstantRef(5),
                        ConstantRef(6),
                        ConstantRef(7),
                        ConstantRef(8),
                    ],
                    statements: NodeRef(195),
                },
            ),
        },
    ],
    constants: [
        Owned(13, 1),
        Owned(297, 1),
        Owned(344, 6),
        Owned(377, 3),
        Owned(382, 1),
        Owned(386, 3),
        Owned(462, 1),
        Owned(498, 1),
        Owned(524, 1),
        Owned(530, 1),
        Owned(607, 1),
        Owned(629, 2),
        Owned(634, 2),
        Owned(639, 3),
    ],
    content_pool: [],
}
