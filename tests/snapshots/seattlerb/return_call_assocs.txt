Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            18,
            19,
            46,
            47,
            62,
            63,
            76,
            77,
            91,
            92,
            107,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 316,
                message: "statement not reached",
                location: Location { start: 19, length: 26 },
                level: 1,
            },
            Warning {
                type: 316,
                message: "statement not reached",
                location: Location { start: 47, length: 14 },
                level: 1,
            },
            Warning {
                type: 316,
                message: "statement not reached",
                location: Location { start: 63, length: 12 },
                level: 1,
            },
            Warning {
                type: 316,
                message: "statement not reached",
                location: Location { start: 77, length: 13 },
                level: 1,
            },
            Warning {
                type: 316,
                message: "statement not reached",
                location: Location { start: 92, length: 14 },
                level: 1,
            },
        ],
        content_pool_offset: 617,
        content_pool_size: 2,
    },
    root: NodeRef(50),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 7, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 10, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 10, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 11, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 16, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 10, length: 7 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(1),
                    value: NodeRef(2),
                    operator_loc: Some(
                        Location { start: 13, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 10, length: 7 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(3),
                    ],
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 7, length: 10 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(0),
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 0, length: 17 },
            node_kind: ReturnNode(
                ReturnNode {
                    keyword_loc: Location { start: 0, length: 6 },
                    arguments: Some(
                        NodeRef(5),
                    ),
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 26, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 29, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 29, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 30, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 35, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 29, length: 7 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(8),
                    value: NodeRef(9),
                    operator_loc: Some(
                        Location { start: 32, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 38, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 38, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 39, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 44, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 38, length: 7 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(11),
                    value: NodeRef(12),
                    operator_loc: Some(
                        Location { start: 41, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 29, length: 16 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(10),
                        NodeRef(13),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 26, length: 19 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(7),
                        NodeRef(14),
                    ],
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 19, length: 26 },
            node_kind: ReturnNode(
                ReturnNode {
                    keyword_loc: Location { start: 19, length: 6 },
                    arguments: Some(
                        NodeRef(15),
                    ),
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 56, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 56, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 57, length: 1 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 60, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 56, length: 5 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(17),
                    value: NodeRef(18),
                    operator_loc: Some(
                        Location { start: 58, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 56, length: 5 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(19),
                    ],
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 56, length: 5 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(20),
                    ],
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 54, length: 7 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 54, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(21),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 54, length: 7 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(22),
                    ],
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 47, length: 14 },
            node_kind: ReturnNode(
                ReturnNode {
                    keyword_loc: Location { start: 47, length: 6 },
                    arguments: Some(
                        NodeRef(23),
                    ),
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 72, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 72, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 73, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 74, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 72, length: 3 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(25),
                    value: NodeRef(26),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 72, length: 3 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(27),
                    ],
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 72, length: 3 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(28),
                    ],
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 70, length: 5 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 70, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(29),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 70, length: 5 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(30),
                    ],
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 63, length: 12 },
            node_kind: ReturnNode(
                ReturnNode {
                    keyword_loc: Location { start: 63, length: 6 },
                    arguments: Some(
                        NodeRef(31),
                    ),
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 86, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 86, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 87, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 88, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 86, length: 3 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(33),
                    value: NodeRef(34),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 86, length: 3 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(35),
                    ],
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 86, length: 3 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(36),
                    ],
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 84, length: 6 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 84, length: 1 },
                    ),
                    opening_loc: Some(
                        Location { start: 85, length: 1 },
                    ),
                    arguments: Some(
                        NodeRef(37),
                    ),
                    closing_loc: Some(
                        Location { start: 89, length: 1 },
                    ),
                    block: None,
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 84, length: 6 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(38),
                    ],
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 77, length: 13 },
            node_kind: ReturnNode(
                ReturnNode {
                    keyword_loc: Location { start: 77, length: 6 },
                    arguments: Some(
                        NodeRef(39),
                    ),
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 101, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 101, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 104, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 47,
            location: Location { start: 101, length: 4 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(41),
                    value: NodeRef(42),
                    operator_loc: Some(
                        Location { start: 102, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 101, length: 4 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(43),
                    ],
                },
            ),
        },
        Node {
            identifier: 48,
            location: Location { start: 101, length: 4 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(44),
                    ],
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 99, length: 7 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 99, length: 1 },
                    ),
                    opening_loc: Some(
                        Location { start: 100, length: 1 },
                    ),
                    arguments: Some(
                        NodeRef(45),
                    ),
                    closing_loc: Some(
                        Location { start: 105, length: 1 },
                    ),
                    block: None,
                },
            ),
        },
        Node {
            identifier: 49,
            location: Location { start: 99, length: 7 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(46),
                    ],
                },
            ),
        },
        Node {
            identifier: 50,
            location: Location { start: 92, length: 14 },
            node_kind: ReturnNode(
                ReturnNode {
                    keyword_loc: Location { start: 92, length: 6 },
                    arguments: Some(
                        NodeRef(47),
                    ),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 106 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(6),
                        NodeRef(16),
                        NodeRef(24),
                        NodeRef(32),
                        NodeRef(40),
                        NodeRef(48),
                    ],
                },
            ),
        },
        Node {
            identifier: 51,
            location: Location { start: 0, length: 106 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(49),
                },
            ),
        },
    ],
    constants: [
        Owned(54, 1),
        Owned(101, 1),
    ],
    content_pool: [],
}
