Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            21,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 112,
        content_pool_size: 1,
    },
    root: NodeRef(8),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 4, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 4, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 5, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 10, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 10, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 15, length: 3 },
            node_kind: NilNode(
                NilNode,
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 10, length: 8 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(1),
                    value: NodeRef(2),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 10, length: 8 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(3),
                    ],
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 4, length: 14 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(0),
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 0, length: 20 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 0, length: 3 },
                    ),
                    opening_loc: Some(
                        Location { start: 3, length: 1 },
                    ),
                    arguments: Some(
                        NodeRef(5),
                    ),
                    closing_loc: Some(
                        Location { start: 19, length: 1 },
                    ),
                    block: None,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 20 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(6),
                    ],
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 0, length: 20 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(7),
                },
            ),
        },
    ],
    constants: [
        Owned(0, 3),
    ],
    content_pool: [],
}
