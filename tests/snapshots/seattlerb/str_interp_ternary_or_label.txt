Program {
    source: "\"#{a.b? ? \"\"+a+\"\": \"\"}\"\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            24,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 0, length: 23 },
                level: 1,
            },
        ],
        content_pool_offset: 285,
        content_pool_size: 3,
    },
    root: NodeRef(18),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 3, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 3, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 3, length: 4 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: Some(
                        NodeRef(0),
                    ),
                    call_operator_loc: Some(
                        Location { start: 4, length: 1 },
                    ),
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 5, length: 2 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 10, length: 2 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 10, length: 1 },
                    ),
                    content_loc: Location { start: 11, length: 0 },
                    closing_loc: Some(
                        Location { start: 11, length: 1 },
                    ),
                    unescaped: Shared(11, 0),
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 13, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 13, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(3),
                    ],
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 10, length: 4 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: Some(
                        NodeRef(2),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 12, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(4),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 15, length: 2 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 15, length: 1 },
                    ),
                    content_loc: Location { start: 16, length: 0 },
                    closing_loc: Some(
                        Location { start: 16, length: 1 },
                    ),
                    unescaped: Shared(16, 0),
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 15, length: 2 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(6),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 10, length: 7 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    receiver: Some(
                        NodeRef(5),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 14, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(7),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 10, length: 7 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(8),
                    ],
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 19, length: 2 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    opening_loc: Some(
                        Location { start: 19, length: 1 },
                    ),
                    content_loc: Location { start: 20, length: 0 },
                    closing_loc: Some(
                        Location { start: 20, length: 1 },
                    ),
                    unescaped: Shared(20, 0),
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 19, length: 2 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 17, length: 4 },
            node_kind: ElseNode(
                ElseNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    else_keyword_loc: Location { start: 17, length: 1 },
                    statements: Some(
                        NodeRef(11),
                    ),
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 3, length: 18 },
            node_kind: IfNode(
                IfNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    if_keyword_loc: None,
                    predicate: NodeRef(1),
                    then_keyword_loc: Some(
                        Location { start: 8, length: 1 },
                    ),
                    statements: Some(
                        NodeRef(9),
                    ),
                    subsequent: Some(
                        NodeRef(12),
                    ),
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 3, length: 18 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(13),
                    ],
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 1, length: 21 },
            node_kind: EmbeddedStatementsNode(
                EmbeddedStatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Location { start: 1, length: 2 },
                    statements: Some(
                        NodeRef(14),
                    ),
                    closing_loc: Location { start: 21, length: 1 },
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 0, length: 23 },
            node_kind: InterpolatedStringNode(
                InterpolatedStringNode {
                    flags: BitFlags<InterpolatedStringNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    opening_loc: Some(
                        Location { start: 0, length: 1 },
                    ),
                    parts: [
                        NodeRef(15),
                    ],
                    closing_loc: Some(
                        Location { start: 22, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 23 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(16),
                    ],
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 0, length: 23 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(17),
                },
            ),
        },
    ],
    constants: [
        Owned(3, 1),
        Owned(5, 2),
        Owned(12, 1),
    ],
    content_pool: [],
}
