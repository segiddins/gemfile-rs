Program {
    source: "mount (Class.new do\ndef initialize\nend\n end).new, :at => 'endpoint'\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            20,
            35,
            39,
            68,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 203,
        content_pool_size: 4,
    },
    root: NodeRef(15),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 7, length: 5 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 20, length: 18 },
            node_kind: DefNode(
                DefNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(3),
                    name_loc: Location { start: 24, length: 10 },
                    receiver: None,
                    parameters: None,
                    body: None,
                    locals: [],
                    def_keyword_loc: Location { start: 20, length: 3 },
                    operator_loc: None,
                    lparen_loc: None,
                    rparen_loc: None,
                    equal_loc: None,
                    end_keyword_loc: Some(
                        Location { start: 35, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 20, length: 18 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(1),
                    ],
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 17, length: 26 },
            node_kind: BlockNode(
                BlockNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    parameters: None,
                    body: Some(
                        NodeRef(2),
                    ),
                    opening_loc: Location { start: 17, length: 2 },
                    closing_loc: Location { start: 40, length: 3 },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 7, length: 36 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    receiver: Some(
                        NodeRef(0),
                    ),
                    call_operator_loc: Some(
                        Location { start: 12, length: 1 },
                    ),
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 13, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: Some(
                        NodeRef(3),
                    ),
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 7, length: 36 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 6, length: 38 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: Some(
                        NodeRef(5),
                    ),
                    opening_loc: Location { start: 6, length: 1 },
                    closing_loc: Location { start: 43, length: 1 },
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 6, length: 42 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: Some(
                        NodeRef(6),
                    ),
                    call_operator_loc: Some(
                        Location { start: 44, length: 1 },
                    ),
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 45, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 50, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 50, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 51, length: 2 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(51, 2),
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 57, length: 10 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 57, length: 1 },
                    ),
                    content_loc: Location { start: 58, length: 8 },
                    closing_loc: Some(
                        Location { start: 66, length: 1 },
                    ),
                    unescaped: Shared(58, 8),
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 50, length: 17 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    key: NodeRef(8),
                    value: NodeRef(9),
                    operator_loc: Some(
                        Location { start: 54, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 50, length: 17 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b100,
                        flags: SYMBOL_KEYS,
                    },
                    elements: [
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 6, length: 61 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_KEYWORDS,
                    },
                    arguments: [
                        NodeRef(7),
                        NodeRef(11),
                    ],
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 0, length: 67 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b100001,
                        flags: NEWLINE | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 0, length: 5 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(12),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 67 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(13),
                    ],
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 0, length: 67 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(14),
                },
            ),
        },
    ],
    constants: [
        Owned(0, 5),
        Owned(7, 5),
        Owned(24, 10),
        Owned(13, 3),
    ],
    content_pool: [],
}
