Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            12,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - a",
                location: Location { start: 0, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 139,
        content_pool_size: 5,
    },
    root: NodeRef(6),
    nodes: [
        Node {
            identifier: 4,
            location: Location { start: 0, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 3, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 3, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 3, length: 4 },
            node_kind: CallTargetNode(
                CallTargetNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: NodeRef(1),
                    call_operator_loc: Location { start: 4, length: 2 },
                    name: ConstantRef(4),
                    message_loc: Location { start: 6, length: 1 },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 10, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(5),
                    message_loc: Some(
                        Location { start: 10, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 0, length: 11 },
            node_kind: MultiWriteNode(
                MultiWriteNode {
                    lefts: [
                        NodeRef(0),
                        NodeRef(2),
                    ],
                    rest: None,
                    rights: [],
                    lparen_loc: None,
                    rparen_loc: None,
                    operator_loc: Location { start: 8, length: 1 },
                    value: NodeRef(3),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 11 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 0, length: 11 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [
                        ConstantRef(1),
                    ],
                    statements: NodeRef(5),
                },
            ),
        },
    ],
    constants: [
        Owned(0, 1),
        Owned(3, 1),
        Owned(6, 1),
        Shared(0, 2),
        Owned(10, 1),
    ],
    content_pool: [
        99,
        61,
    ],
}
