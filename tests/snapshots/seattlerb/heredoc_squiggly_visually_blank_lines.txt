Program {
    source: "a = <<~EOF\n  x\n \n  z\nEOF\n\n\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            11,
            15,
            17,
            21,
            25,
            26,
            27,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - a",
                location: Location { start: 0, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 147,
        content_pool_size: 1,
    },
    root: NodeRef(6),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 11, length: 4 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FROZEN,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 11, length: 4 },
                    closing_loc: None,
                    unescaped: Owned("x\n"),
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 15, length: 2 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FROZEN,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 15, length: 2 },
                    closing_loc: None,
                    unescaped: Owned("\n"),
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 17, length: 4 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FROZEN,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 17, length: 4 },
                    closing_loc: None,
                    unescaped: Owned("z\n"),
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 4, length: 6 },
            node_kind: InterpolatedStringNode(
                InterpolatedStringNode {
                    flags: BitFlags<InterpolatedStringNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    opening_loc: Some(
                        Location { start: 4, length: 6 },
                    ),
                    parts: [
                        NodeRef(0),
                        NodeRef(1),
                        NodeRef(2),
                    ],
                    closing_loc: Some(
                        Location { start: 21, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 0, length: 10 },
            node_kind: LocalVariableWriteNode(
                LocalVariableWriteNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                    name_loc: Location { start: 0, length: 1 },
                    value: NodeRef(3),
                    operator_loc: Location { start: 2, length: 1 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 10 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 0, length: 10 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [
                        ConstantRef(1),
                    ],
                    statements: NodeRef(5),
                },
            ),
        },
    ],
    constants: [
        Owned(0, 1),
    ],
    content_pool: [],
}
