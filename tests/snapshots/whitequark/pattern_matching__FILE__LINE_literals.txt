Program {
    source: "        case [__FILE__, __LINE__ + 1, __ENCODING__]\n          in [__FILE__, __LINE__, __ENCODING__]\n        end\n\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            52,
            100,
            112,
            113,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 152,
        content_pool_size: 1,
    },
    root: NodeRef(14),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 14, length: 8 },
            node_kind: SourceFileNode(
                SourceFileNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    filepath: Owned(""),
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 24, length: 8 },
            node_kind: SourceLineNode(
                SourceLineNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 35, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 35, length: 1 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b0,
                    },
                    arguments: [
                        NodeRef(2),
                    ],
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 24, length: 12 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: Some(
                        NodeRef(1),
                    ),
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 33, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(3),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 38, length: 12 },
            node_kind: SourceEncodingNode(
                SourceEncodingNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 13, length: 38 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(0),
                        NodeRef(4),
                        NodeRef(5),
                    ],
                    opening_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 50, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 66, length: 8 },
            node_kind: SourceFileNode(
                SourceFileNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    filepath: Owned(""),
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 76, length: 8 },
            node_kind: SourceLineNode(
                SourceLineNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 86, length: 12 },
            node_kind: SourceEncodingNode(
                SourceEncodingNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 65, length: 34 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    constant: None,
                    requireds: [
                        NodeRef(7),
                        NodeRef(8),
                        NodeRef(9),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 65, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 98, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 62, length: 37 },
            node_kind: InNode(
                InNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    pattern: NodeRef(10),
                    statements: None,
                    in_loc: Location { start: 62, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 8, length: 103 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    predicate: Some(
                        NodeRef(6),
                    ),
                    conditions: [
                        NodeRef(11),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 8, length: 4 },
                    end_keyword_loc: Location { start: 108, length: 3 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 8, length: 103 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(12),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 8, length: 103 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(13),
                },
            ),
        },
    ],
    constants: [
        Owned(33, 1),
    ],
    content_pool: [],
}
