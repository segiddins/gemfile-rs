Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            9,
            15,
            17,
            22,
            30,
            32,
            37,
            41,
            42,
            57,
            59,
            60,
            73,
            75,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 15, length: 1 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 30, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - a",
                location: Location { start: 12, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - b",
                location: Location { start: 26, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 554,
        content_pool_size: 5,
    },
    root: NodeRef(35),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 5, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 5, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 12, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 12, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 12, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 12, length: 1 },
            node_kind: ImplicitNode(
                ImplicitNode {
                    value: NodeRef(2),
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 12, length: 2 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(1),
                    value: NodeRef(3),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 12, length: 2 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [
                        NodeRef(4),
                    ],
                    rest: None,
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 15, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1011,
                        flags: BINARY | DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            0,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 17, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 15, length: 6 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(6),
                        NodeRef(7),
                    ],
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 9, length: 12 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(5),
                    statements: Some(
                        NodeRef(8),
                    ),
                    in_loc: Location { start: 9, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 25, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 25, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 26, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 27, length: 2 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 26, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 26, length: 1 },
            node_kind: ImplicitNode(
                ImplicitNode {
                    value: NodeRef(11),
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 25, length: 4 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(10),
                    value: NodeRef(12),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 25, length: 4 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [
                        NodeRef(13),
                    ],
                    rest: None,
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 30, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1011,
                        flags: BINARY | DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            0,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 32, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 30, length: 6 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(15),
                        NodeRef(16),
                    ],
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 22, length: 14 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(14),
                    statements: Some(
                        NodeRef(17),
                    ),
                    in_loc: Location { start: 22, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 40 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(0),
                    ),
                    conditions: [
                        NodeRef(9),
                        NodeRef(18),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 0, length: 4 },
                    end_keyword_loc: Location { start: 37, length: 3 },
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 42, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 42, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 50, length: 6 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 50, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 51, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 54, length: 2 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 57, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 50, length: 8 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(21),
                    value: NodeRef(22),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 50, length: 8 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(23),
                    ],
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 50, length: 8 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(24),
                    ],
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 42, length: 16 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(20),
                    ),
                    call_operator_loc: Some(
                        Location { start: 45, length: 1 },
                    ),
                    name: ConstantRef(5),
                    message_loc: Some(
                        Location { start: 46, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(25),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 60, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 60, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 68, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 68, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 71, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 73, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 68, length: 6 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(28),
                    value: NodeRef(29),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 68, length: 6 },
            node_kind: KeywordHashNode(
                KeywordHashNode {
                    flags: BitFlags<KeywordHashNodeFlags> {
                        bits: 0b0,
                    },
                    elements: [
                        NodeRef(30),
                    ],
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 68, length: 6 },
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    flags: BitFlags<ArgumentsNodeFlags> {
                        bits: 0b1000,
                        flags: CONTAINS_SPLAT,
                    },
                    arguments: [
                        NodeRef(31),
                    ],
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 60, length: 14 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1,
                        flags: SAFE_NAVIGATION,
                    },
                    receiver: Some(
                        NodeRef(27),
                    ),
                    call_operator_loc: Some(
                        Location { start: 63, length: 1 },
                    ),
                    name: ConstantRef(5),
                    message_loc: Some(
                        Location { start: 64, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(32),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 74 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(19),
                        NodeRef(26),
                        NodeRef(33),
                    ],
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 0, length: 74 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [
                        ConstantRef(2),
                        ConstantRef(3),
                    ],
                    statements: NodeRef(34),
                },
            ),
        },
    ],
    constants: [
        Owned(5, 3),
        Owned(12, 1),
        Owned(26, 1),
        Owned(42, 3),
        Owned(46, 3),
    ],
    content_pool: [],
}
