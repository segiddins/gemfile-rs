Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            37,
            38,
            81,
            82,
            126,
            127,
            172,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - x",
                location: Location { start: 142, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - a",
                location: Location { start: 150, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - y",
                location: Location { start: 154, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 559,
        content_pool_size: 6,
    },
    root: NodeRef(43),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 5, length: 3 },
            flags: 40,
            node_kind: CallNode(
                CallNode {
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 5, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 13, length: 1 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 13, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 16, length: 2 },
            flags: 10,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            42,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 20, length: 1 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 20, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 13, length: 8 },
            flags: 0,
            node_kind: FindPatternNode(
                FindPatternNode {
                    constant: None,
                    left: NodeRef(1),
                    requireds: [
                        NodeRef(2),
                    ],
                    right: NodeRef(3),
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 27, length: 4 },
            flags: 3,
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 27, length: 4 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(5),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 10, length: 21 },
            flags: 0,
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(4),
                    statements: Some(
                        NodeRef(6),
                    ),
                    in_loc: Location { start: 10, length: 2 },
                    then_loc: Some(
                        Location { start: 22, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 36 },
            flags: 1,
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(0),
                    ),
                    conditions: [
                        NodeRef(7),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 0, length: 4 },
                    end_keyword_loc: Location { start: 33, length: 3 },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 43, length: 3 },
            flags: 40,
            node_kind: CallNode(
                CallNode {
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 43, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 51, length: 5 },
            flags: 0,
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 57, length: 1 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 57, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 60, length: 1 },
            flags: 10,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 63, length: 1 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 63, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 51, length: 14 },
            flags: 0,
            node_kind: FindPatternNode(
                FindPatternNode {
                    constant: Some(
                        NodeRef(10),
                    ),
                    left: NodeRef(11),
                    requireds: [
                        NodeRef(12),
                    ],
                    right: NodeRef(13),
                    opening_loc: Some(
                        Location { start: 56, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 64, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 71, length: 4 },
            flags: 3,
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 71, length: 4 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(15),
                    ],
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 48, length: 27 },
            flags: 0,
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(14),
                    statements: Some(
                        NodeRef(16),
                    ),
                    in_loc: Location { start: 48, length: 2 },
                    then_loc: Some(
                        Location { start: 66, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 38, length: 42 },
            flags: 1,
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(9),
                    ),
                    conditions: [
                        NodeRef(17),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 38, length: 4 },
                    end_keyword_loc: Location { start: 77, length: 3 },
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 87, length: 3 },
            flags: 40,
            node_kind: CallNode(
                CallNode {
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 87, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 95, length: 6 },
            flags: 0,
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(3),
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 102, length: 1 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 102, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 105, length: 1 },
            flags: 10,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 108, length: 1 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 108, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 95, length: 15 },
            flags: 0,
            node_kind: FindPatternNode(
                FindPatternNode {
                    constant: Some(
                        NodeRef(20),
                    ),
                    left: NodeRef(21),
                    requireds: [
                        NodeRef(22),
                    ],
                    right: NodeRef(23),
                    opening_loc: Some(
                        Location { start: 101, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 109, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 116, length: 4 },
            flags: 3,
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 116, length: 4 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(25),
                    ],
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 92, length: 28 },
            flags: 0,
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(24),
                    statements: Some(
                        NodeRef(26),
                    ),
                    in_loc: Location { start: 92, length: 2 },
                    then_loc: Some(
                        Location { start: 111, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 82, length: 43 },
            flags: 1,
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(19),
                    ),
                    conditions: [
                        NodeRef(27),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 82, length: 4 },
                    end_keyword_loc: Location { start: 122, length: 3 },
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 132, length: 3 },
            flags: 40,
            node_kind: CallNode(
                CallNode {
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 132, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 142, length: 1 },
            flags: 0,
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(4),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 141, length: 2 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 141, length: 1 },
                    expression: Some(
                        NodeRef(30),
                    ),
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 145, length: 1 },
            flags: 10,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 150, length: 1 },
            flags: 0,
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 145, length: 6 },
            flags: 0,
            node_kind: CapturePatternNode(
                CapturePatternNode {
                    value: NodeRef(32),
                    target: NodeRef(33),
                    operator_loc: Location { start: 147, length: 2 },
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 154, length: 1 },
            flags: 0,
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(6),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 153, length: 2 },
            flags: 0,
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 153, length: 1 },
                    expression: Some(
                        NodeRef(35),
                    ),
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 140, length: 16 },
            flags: 0,
            node_kind: FindPatternNode(
                FindPatternNode {
                    constant: None,
                    left: NodeRef(31),
                    requireds: [
                        NodeRef(34),
                    ],
                    right: NodeRef(36),
                    opening_loc: Some(
                        Location { start: 140, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 155, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 162, length: 4 },
            flags: 3,
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 162, length: 4 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(38),
                    ],
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 137, length: 29 },
            flags: 0,
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(37),
                    statements: Some(
                        NodeRef(39),
                    ),
                    in_loc: Location { start: 137, length: 2 },
                    then_loc: Some(
                        Location { start: 157, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 127, length: 44 },
            flags: 1,
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(29),
                    ),
                    conditions: [
                        NodeRef(40),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 127, length: 4 },
                    end_keyword_loc: Location { start: 168, length: 3 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 171 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(8),
                        NodeRef(18),
                        NodeRef(28),
                        NodeRef(41),
                    ],
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 0, length: 171 },
            flags: 0,
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [
                        ConstantRef(4),
                        ConstantRef(5),
                        ConstantRef(6),
                    ],
                    statements: NodeRef(42),
                },
            ),
        },
    ],
    constants: [
        Owned(5, 3),
        Owned(51, 5),
        Owned(95, 6),
        Owned(142, 1),
        Owned(150, 1),
        Owned(154, 1),
    ],
    content_pool: [],
}
