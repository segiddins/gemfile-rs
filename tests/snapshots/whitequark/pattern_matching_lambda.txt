Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            37,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 115,
        content_pool_size: 1,
    },
    root: NodeRef(9),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 5, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 5, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 17, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1011,
                        flags: BINARY | DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            42,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 17, length: 2 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(1),
                    ],
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 13, length: 8 },
            node_kind: LambdaNode(
                LambdaNode {
                    locals: [],
                    operator_loc: Location { start: 13, length: 2 },
                    opening_loc: Location { start: 15, length: 1 },
                    closing_loc: Location { start: 20, length: 1 },
                    parameters: None,
                    body: Some(
                        NodeRef(2),
                    ),
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 27, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 27, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 10, length: 21 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(3),
                    statements: Some(
                        NodeRef(5),
                    ),
                    in_loc: Location { start: 10, length: 2 },
                    then_loc: Some(
                        Location { start: 22, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 36 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(0),
                    ),
                    conditions: [
                        NodeRef(6),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 0, length: 4 },
                    end_keyword_loc: Location { start: 33, length: 3 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 36 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(7),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 0, length: 36 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(8),
                },
            ),
        },
    ],
    constants: [
        Owned(5, 3),
    ],
    content_pool: [],
}
