Program {
    source: "case foo; in x if true; nil; end\n\ncase foo; in x unless true; nil; end\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            33,
            34,
            71,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - x",
                location: Location { start: 13, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 229,
        content_pool_size: 2,
    },
    root: NodeRef(19),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 5, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 5, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 18, length: 4 },
            node_kind: TrueNode(
                TrueNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 13, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 13, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(2),
                    ],
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 13, length: 9 },
            node_kind: IfNode(
                IfNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    if_keyword_loc: Some(
                        Location { start: 15, length: 2 },
                    ),
                    predicate: NodeRef(1),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(3),
                    ),
                    subsequent: None,
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 24, length: 3 },
            node_kind: NilNode(
                NilNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b11,
                        flags: NEWLINE | STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 24, length: 3 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(5),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 10, length: 17 },
            node_kind: InNode(
                InNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    pattern: NodeRef(4),
                    statements: Some(
                        NodeRef(6),
                    ),
                    in_loc: Location { start: 10, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 32 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    predicate: Some(
                        NodeRef(0),
                    ),
                    conditions: [
                        NodeRef(7),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 0, length: 4 },
                    end_keyword_loc: Location { start: 29, length: 3 },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 39, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 39, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 56, length: 4 },
            node_kind: TrueNode(
                TrueNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 47, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 47, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(11),
                    ],
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 47, length: 13 },
            node_kind: UnlessNode(
                UnlessNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    keyword_loc: Location { start: 49, length: 6 },
                    predicate: NodeRef(10),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(12),
                    ),
                    else_clause: None,
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 62, length: 3 },
            node_kind: NilNode(
                NilNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b11,
                        flags: NEWLINE | STATIC_LITERAL,
                    },
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 62, length: 3 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(14),
                    ],
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 44, length: 21 },
            node_kind: InNode(
                InNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    pattern: NodeRef(13),
                    statements: Some(
                        NodeRef(15),
                    ),
                    in_loc: Location { start: 44, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 34, length: 36 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    predicate: Some(
                        NodeRef(9),
                    ),
                    conditions: [
                        NodeRef(16),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 34, length: 4 },
                    end_keyword_loc: Location { start: 67, length: 3 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 70 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(8),
                        NodeRef(17),
                    ],
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 0, length: 70 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [
                        ConstantRef(2),
                    ],
                    statements: NodeRef(18),
                },
            ),
        },
    ],
    constants: [
        Owned(5, 3),
        Owned(13, 1),
    ],
    content_pool: [],
}
