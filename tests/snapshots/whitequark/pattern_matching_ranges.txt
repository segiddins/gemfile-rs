Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            33,
            34,
            66,
            67,
            99,
            100,
            133,
            134,
            168,
            169,
            202,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 479,
        content_pool_size: 1,
    },
    root: NodeRef(45),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 5, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 5, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 16, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 13, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(1),
                    ),
                    operator_loc: Location { start: 13, length: 3 },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 23, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 23, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(3),
                    ],
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 10, length: 17 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(2),
                    statements: Some(
                        NodeRef(4),
                    ),
                    in_loc: Location { start: 10, length: 2 },
                    then_loc: Some(
                        Location { start: 18, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 32 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(0),
                    ),
                    conditions: [
                        NodeRef(5),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 0, length: 4 },
                    end_keyword_loc: Location { start: 29, length: 3 },
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 39, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 39, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 49, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 47, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: None,
                    right: Some(
                        NodeRef(8),
                    ),
                    operator_loc: Location { start: 47, length: 2 },
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 56, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 56, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 44, length: 16 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(9),
                    statements: Some(
                        NodeRef(11),
                    ),
                    in_loc: Location { start: 44, length: 2 },
                    then_loc: Some(
                        Location { start: 51, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 34, length: 31 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(7),
                    ),
                    conditions: [
                        NodeRef(12),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 34, length: 4 },
                    end_keyword_loc: Location { start: 62, length: 3 },
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 72, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 72, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 80, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 80, length: 3 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(15),
                    ),
                    right: None,
                    operator_loc: Location { start: 81, length: 2 },
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 89, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 89, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(17),
                    ],
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 77, length: 16 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(16),
                    statements: Some(
                        NodeRef(18),
                    ),
                    in_loc: Location { start: 77, length: 2 },
                    then_loc: Some(
                        Location { start: 84, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 67, length: 31 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(14),
                    ),
                    conditions: [
                        NodeRef(19),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 67, length: 4 },
                    end_keyword_loc: Location { start: 95, length: 3 },
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 105, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 105, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 113, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 113, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(22),
                    ),
                    right: None,
                    operator_loc: Location { start: 114, length: 3 },
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 123, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 123, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(24),
                    ],
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 110, length: 17 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(23),
                    statements: Some(
                        NodeRef(25),
                    ),
                    in_loc: Location { start: 110, length: 2 },
                    then_loc: Some(
                        Location { start: 118, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 100, length: 32 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(21),
                    ),
                    conditions: [
                        NodeRef(26),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 100, length: 4 },
                    end_keyword_loc: Location { start: 129, length: 3 },
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 139, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 139, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 147, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 151, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 147, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(29),
                    ),
                    right: Some(
                        NodeRef(30),
                    ),
                    operator_loc: Location { start: 148, length: 3 },
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 158, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 158, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(32),
                    ],
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 144, length: 18 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(31),
                    statements: Some(
                        NodeRef(33),
                    ),
                    in_loc: Location { start: 144, length: 2 },
                    then_loc: Some(
                        Location { start: 153, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 134, length: 33 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(28),
                    ),
                    conditions: [
                        NodeRef(34),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 134, length: 4 },
                    end_keyword_loc: Location { start: 164, length: 3 },
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 174, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 174, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 182, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 185, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 182, length: 4 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b0,
                    },
                    left: Some(
                        NodeRef(37),
                    ),
                    right: Some(
                        NodeRef(38),
                    ),
                    operator_loc: Location { start: 183, length: 2 },
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 192, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 192, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(40),
                    ],
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 179, length: 17 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(39),
                    statements: Some(
                        NodeRef(41),
                    ),
                    in_loc: Location { start: 179, length: 2 },
                    then_loc: Some(
                        Location { start: 187, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 169, length: 32 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(36),
                    ),
                    conditions: [
                        NodeRef(42),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 169, length: 4 },
                    end_keyword_loc: Location { start: 198, length: 3 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 201 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(6),
                        NodeRef(13),
                        NodeRef(20),
                        NodeRef(27),
                        NodeRef(35),
                        NodeRef(43),
                    ],
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 0, length: 201 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(44),
                },
            ),
        },
    ],
    constants: [
        Owned(5, 3),
    ],
    content_pool: [],
}
