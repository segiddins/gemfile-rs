Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            12,
            13,
            23,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 135,
        content_pool_size: 1,
    },
    root: NodeRef(10),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 6, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 3, length: 4 },
            node_kind: OptionalKeywordParameterNode(
                OptionalKeywordParameterNode {
                    flags: BitFlags<ParameterFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    name_loc: Location { start: 3, length: 2 },
                    value: NodeRef(0),
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 3, length: 4 },
            node_kind: ParametersNode(
                ParametersNode {
                    requireds: [],
                    optionals: [],
                    rest: None,
                    posts: [],
                    keywords: [
                        NodeRef(1),
                    ],
                    keyword_rest: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 3, length: 4 },
            node_kind: BlockParametersNode(
                BlockParametersNode {
                    parameters: Some(
                        NodeRef(2),
                    ),
                    locals: [],
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 0, length: 11 },
            node_kind: LambdaNode(
                LambdaNode {
                    locals: [
                        ConstantRef(1),
                    ],
                    operator_loc: Location { start: 0, length: 2 },
                    opening_loc: Location { start: 8, length: 1 },
                    closing_loc: Location { start: 10, length: 1 },
                    parameters: Some(
                        NodeRef(3),
                    ),
                    body: None,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 16, length: 2 },
            node_kind: RequiredKeywordParameterNode(
                RequiredKeywordParameterNode {
                    flags: BitFlags<ParameterFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    name_loc: Location { start: 16, length: 2 },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 16, length: 2 },
            node_kind: ParametersNode(
                ParametersNode {
                    requireds: [],
                    optionals: [],
                    rest: None,
                    posts: [],
                    keywords: [
                        NodeRef(5),
                    ],
                    keyword_rest: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 16, length: 2 },
            node_kind: BlockParametersNode(
                BlockParametersNode {
                    parameters: Some(
                        NodeRef(6),
                    ),
                    locals: [],
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 13, length: 9 },
            node_kind: LambdaNode(
                LambdaNode {
                    locals: [
                        ConstantRef(1),
                    ],
                    operator_loc: Location { start: 13, length: 2 },
                    opening_loc: Location { start: 19, length: 1 },
                    closing_loc: Location { start: 21, length: 1 },
                    parameters: Some(
                        NodeRef(7),
                    ),
                    body: None,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 22 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(4),
                        NodeRef(8),
                    ],
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 0, length: 22 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(9),
                },
            ),
        },
    ],
    constants: [
        Owned(3, 1),
    ],
    content_pool: [],
}
