Program {
    source: "{ 1 => 2 }\n\n{ 1 => 2, :foo => \"bar\" }\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            11,
            12,
            38,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 150,
        content_pool_size: 0,
    },
    root: NodeRef(12),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 2, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 7, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 2, length: 6 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    key: NodeRef(0),
                    value: NodeRef(1),
                    operator_loc: Some(
                        Location { start: 4, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 0, length: 10 },
            node_kind: HashNode(
                HashNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b11,
                        flags: NEWLINE | STATIC_LITERAL,
                    },
                    opening_loc: Location { start: 0, length: 1 },
                    elements: [
                        NodeRef(2),
                    ],
                    closing_loc: Location { start: 9, length: 1 },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 14, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 19, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 14, length: 6 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    key: NodeRef(4),
                    value: NodeRef(5),
                    operator_loc: Some(
                        Location { start: 16, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 22, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 22, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 23, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(23, 3),
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 30, length: 5 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 30, length: 1 },
                    ),
                    content_loc: Location { start: 31, length: 3 },
                    closing_loc: Some(
                        Location { start: 34, length: 1 },
                    ),
                    unescaped: Shared(31, 3),
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 22, length: 13 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    key: NodeRef(7),
                    value: NodeRef(8),
                    operator_loc: Some(
                        Location { start: 27, length: 2 },
                    ),
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 12, length: 25 },
            node_kind: HashNode(
                HashNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    opening_loc: Location { start: 12, length: 1 },
                    elements: [
                        NodeRef(6),
                        NodeRef(9),
                    ],
                    closing_loc: Location { start: 36, length: 1 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 37 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(3),
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 0, length: 37 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(11),
                },
            ),
        },
    ],
    constants: [],
    content_pool: [],
}
