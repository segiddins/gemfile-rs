Program {
    source: "undef foo, :bar, :\"foo#{1}\"\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            28,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 124,
        content_pool_size: 0,
    },
    root: NodeRef(9),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 6, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 6, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(6, 3),
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 11, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 11, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 12, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(12, 3),
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 19, length: 3 },
            node_kind: StringNode(
                StringNode {
                    flags: BitFlags<StringFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FROZEN,
                    },
                    opening_loc: None,
                    content_loc: Location { start: 19, length: 3 },
                    closing_loc: None,
                    unescaped: Shared(19, 3),
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 24, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 24, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(3),
                    ],
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 22, length: 4 },
            node_kind: EmbeddedStatementsNode(
                EmbeddedStatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Location { start: 22, length: 2 },
                    statements: Some(
                        NodeRef(4),
                    ),
                    closing_loc: Location { start: 25, length: 1 },
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 17, length: 10 },
            node_kind: InterpolatedSymbolNode(
                InterpolatedSymbolNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    opening_loc: Some(
                        Location { start: 17, length: 2 },
                    ),
                    parts: [
                        NodeRef(2),
                        NodeRef(5),
                    ],
                    closing_loc: Some(
                        Location { start: 26, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 0, length: 27 },
            node_kind: UndefNode(
                UndefNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    names: [
                        NodeRef(0),
                        NodeRef(1),
                        NodeRef(6),
                    ],
                    keyword_loc: Location { start: 0, length: 5 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 27 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(7),
                    ],
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 0, length: 27 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(8),
                },
            ),
        },
    ],
    constants: [],
    content_pool: [],
}
