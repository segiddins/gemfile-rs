Program {
    source: "[1, 2] => a, b; a\n\n[1, 2] in a, b; a\n\n{a: 1} => a:; a\n\n{a: 1} in a:; a\n\n{key: :value} => key: value; value\n\n{key: :value} in key: value; value\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            18,
            19,
            37,
            38,
            54,
            55,
            71,
            72,
            107,
            108,
            143,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 318,
                message: "possibly useless use of a variable in void context",
                location: Location { start: 16, length: 1 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a variable in void context",
                location: Location { start: 35, length: 1 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a variable in void context",
                location: Location { start: 52, length: 1 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a variable in void context",
                location: Location { start: 69, length: 1 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a variable in void context",
                location: Location { start: 101, length: 5 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a variable in void context",
                location: Location { start: 137, length: 5 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - b",
                location: Location { start: 13, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 957,
        content_pool_size: 3,
    },
    root: NodeRef(59),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 1, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 4, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 0, length: 6 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    elements: [
                        NodeRef(0),
                        NodeRef(1),
                    ],
                    opening_loc: Some(
                        Location { start: 0, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 5, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 10, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 13, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 10, length: 4 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    constant: None,
                    requireds: [
                        NodeRef(3),
                        NodeRef(4),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 0, length: 14 },
            node_kind: MatchRequiredNode(
                MatchRequiredNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    value: NodeRef(2),
                    pattern: NodeRef(5),
                    operator_loc: Location { start: 7, length: 2 },
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 16, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 20, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 23, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 19, length: 6 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    elements: [
                        NodeRef(8),
                        NodeRef(9),
                    ],
                    opening_loc: Some(
                        Location { start: 19, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 24, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 29, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 32, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 29, length: 4 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    constant: None,
                    requireds: [
                        NodeRef(11),
                        NodeRef(12),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 19, length: 14 },
            node_kind: MatchPredicateNode(
                MatchPredicateNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    value: NodeRef(10),
                    pattern: NodeRef(13),
                    operator_loc: Location { start: 26, length: 2 },
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 35, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 39, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 39, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 40, length: 1 },
                    ),
                    unescaped: Shared(39, 1),
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 42, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 39, length: 4 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    key: NodeRef(16),
                    value: NodeRef(17),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 38, length: 6 },
            node_kind: HashNode(
                HashNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    opening_loc: Location { start: 38, length: 1 },
                    elements: [
                        NodeRef(18),
                    ],
                    closing_loc: Location { start: 43, length: 1 },
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 48, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 48, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 49, length: 1 },
                    ),
                    unescaped: Shared(48, 1),
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 48, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 48, length: 1 },
            node_kind: ImplicitNode(
                ImplicitNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    value: NodeRef(21),
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 48, length: 2 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    key: NodeRef(20),
                    value: NodeRef(22),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 48, length: 2 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    constant: None,
                    elements: [
                        NodeRef(23),
                    ],
                    rest: None,
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 38, length: 12 },
            node_kind: MatchRequiredNode(
                MatchRequiredNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    value: NodeRef(19),
                    pattern: NodeRef(24),
                    operator_loc: Location { start: 45, length: 2 },
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 52, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 56, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 56, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 57, length: 1 },
                    ),
                    unescaped: Shared(56, 1),
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 59, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 56, length: 4 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    key: NodeRef(27),
                    value: NodeRef(28),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 55, length: 6 },
            node_kind: HashNode(
                HashNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    opening_loc: Location { start: 55, length: 1 },
                    elements: [
                        NodeRef(29),
                    ],
                    closing_loc: Location { start: 60, length: 1 },
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 65, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 65, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 66, length: 1 },
                    ),
                    unescaped: Shared(65, 1),
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 65, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 65, length: 1 },
            node_kind: ImplicitNode(
                ImplicitNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    value: NodeRef(32),
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 65, length: 2 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    key: NodeRef(31),
                    value: NodeRef(33),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 65, length: 2 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    constant: None,
                    elements: [
                        NodeRef(34),
                    ],
                    rest: None,
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 55, length: 12 },
            node_kind: MatchPredicateNode(
                MatchPredicateNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    value: NodeRef(30),
                    pattern: NodeRef(35),
                    operator_loc: Location { start: 62, length: 2 },
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 69, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 73, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 73, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 76, length: 1 },
                    ),
                    unescaped: Shared(73, 3),
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 78, length: 6 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 78, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 79, length: 5 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(79, 5),
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 73, length: 11 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    key: NodeRef(38),
                    value: NodeRef(39),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 72, length: 13 },
            node_kind: HashNode(
                HashNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    opening_loc: Location { start: 72, length: 1 },
                    elements: [
                        NodeRef(40),
                    ],
                    closing_loc: Location { start: 84, length: 1 },
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 89, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 89, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 92, length: 1 },
                    ),
                    unescaped: Shared(89, 3),
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 94, length: 5 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 89, length: 10 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    key: NodeRef(42),
                    value: NodeRef(43),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 47,
            location: Location { start: 89, length: 10 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    constant: None,
                    elements: [
                        NodeRef(44),
                    ],
                    rest: None,
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 48,
            location: Location { start: 72, length: 27 },
            node_kind: MatchRequiredNode(
                MatchRequiredNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    value: NodeRef(41),
                    pattern: NodeRef(45),
                    operator_loc: Location { start: 86, length: 2 },
                },
            ),
        },
        Node {
            identifier: 49,
            location: Location { start: 101, length: 5 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 51,
            location: Location { start: 109, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 109, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 112, length: 1 },
                    ),
                    unescaped: Shared(109, 3),
                },
            ),
        },
        Node {
            identifier: 52,
            location: Location { start: 114, length: 6 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 114, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 115, length: 5 },
                    ),
                    closing_loc: None,
                    unescaped: Shared(115, 5),
                },
            ),
        },
        Node {
            identifier: 53,
            location: Location { start: 109, length: 11 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    key: NodeRef(48),
                    value: NodeRef(49),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 50,
            location: Location { start: 108, length: 13 },
            node_kind: HashNode(
                HashNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    opening_loc: Location { start: 108, length: 1 },
                    elements: [
                        NodeRef(50),
                    ],
                    closing_loc: Location { start: 120, length: 1 },
                },
            ),
        },
        Node {
            identifier: 54,
            location: Location { start: 125, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10010,
                        flags: STATIC_LITERAL | FORCED_US_ASCII_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 125, length: 3 },
                    ),
                    closing_loc: Some(
                        Location { start: 128, length: 1 },
                    ),
                    unescaped: Shared(125, 3),
                },
            ),
        },
        Node {
            identifier: 55,
            location: Location { start: 130, length: 5 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 56,
            location: Location { start: 125, length: 10 },
            node_kind: AssocNode(
                AssocNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    key: NodeRef(52),
                    value: NodeRef(53),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 57,
            location: Location { start: 125, length: 10 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    constant: None,
                    elements: [
                        NodeRef(54),
                    ],
                    rest: None,
                    opening_loc: None,
                    closing_loc: None,
                },
            ),
        },
        Node {
            identifier: 58,
            location: Location { start: 108, length: 27 },
            node_kind: MatchPredicateNode(
                MatchPredicateNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    value: NodeRef(51),
                    pattern: NodeRef(55),
                    operator_loc: Location { start: 122, length: 2 },
                },
            ),
        },
        Node {
            identifier: 59,
            location: Location { start: 137, length: 5 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 142 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(6),
                        NodeRef(7),
                        NodeRef(14),
                        NodeRef(15),
                        NodeRef(25),
                        NodeRef(26),
                        NodeRef(36),
                        NodeRef(37),
                        NodeRef(46),
                        NodeRef(47),
                        NodeRef(56),
                        NodeRef(57),
                    ],
                },
            ),
        },
        Node {
            identifier: 60,
            location: Location { start: 0, length: 142 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [
                        ConstantRef(1),
                        ConstantRef(2),
                        ConstantRef(3),
                    ],
                    statements: NodeRef(58),
                },
            ),
        },
    ],
    constants: [
        Owned(10, 1),
        Owned(13, 1),
        Owned(94, 5),
    ],
    content_pool: [],
}
