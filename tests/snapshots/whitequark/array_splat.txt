Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            7,
            8,
            21,
            22,
            32,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 171,
        content_pool_size: 1,
    },
    root: NodeRef(13),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 2, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 2, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 1, length: 4 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 1, length: 1 },
                    expression: Some(
                        NodeRef(0),
                    ),
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 0, length: 6 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b1,
                        flags: CONTAINS_SPLAT,
                    },
                    elements: [
                        NodeRef(1),
                    ],
                    opening_loc: Some(
                        Location { start: 0, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 5, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 9, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 13, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 13, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 12, length: 4 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 12, length: 1 },
                    expression: Some(
                        NodeRef(4),
                    ),
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 18, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 8, length: 12 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b1,
                        flags: CONTAINS_SPLAT,
                    },
                    elements: [
                        NodeRef(3),
                        NodeRef(5),
                        NodeRef(6),
                    ],
                    opening_loc: Some(
                        Location { start: 8, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 19, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 23, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 27, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 27, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 26, length: 4 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 26, length: 1 },
                    expression: Some(
                        NodeRef(9),
                    ),
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 22, length: 9 },
            node_kind: ArrayNode(
                ArrayNode {
                    flags: BitFlags<ArrayNodeFlags> {
                        bits: 0b1,
                        flags: CONTAINS_SPLAT,
                    },
                    elements: [
                        NodeRef(8),
                        NodeRef(10),
                    ],
                    opening_loc: Some(
                        Location { start: 22, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 30, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 31 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(2),
                        NodeRef(7),
                        NodeRef(11),
                    ],
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 0, length: 31 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(12),
                },
            ),
        },
    ],
    constants: [
        Owned(2, 3),
    ],
    content_pool: [],
}
