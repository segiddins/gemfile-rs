Program {
    source: "@@var |= 10\n\n@a |= 1\n\na += 1\n\ndef a; @@var |= 10; end\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            12,
            13,
            21,
            22,
            29,
            30,
            54,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 155,
        content_pool_size: 5,
    },
    root: NodeRef(11),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 9, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 0, length: 11 },
            node_kind: ClassVariableOperatorWriteNode(
                ClassVariableOperatorWriteNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    name_loc: Location { start: 0, length: 5 },
                    binary_operator_loc: Location { start: 6, length: 2 },
                    value: NodeRef(0),
                    binary_operator: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 19, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 13, length: 7 },
            node_kind: InstanceVariableOperatorWriteNode(
                InstanceVariableOperatorWriteNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(3),
                    name_loc: Location { start: 13, length: 2 },
                    binary_operator_loc: Location { start: 16, length: 2 },
                    value: NodeRef(2),
                    binary_operator: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 27, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 22, length: 6 },
            node_kind: LocalVariableOperatorWriteNode(
                LocalVariableOperatorWriteNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name_loc: Location { start: 22, length: 1 },
                    binary_operator_loc: Location { start: 24, length: 2 },
                    value: NodeRef(4),
                    name: ConstantRef(4),
                    binary_operator: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 46, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 37, length: 11 },
            node_kind: ClassVariableOperatorWriteNode(
                ClassVariableOperatorWriteNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    name_loc: Location { start: 37, length: 5 },
                    binary_operator_loc: Location { start: 43, length: 2 },
                    value: NodeRef(6),
                    binary_operator: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 37, length: 11 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(7),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 30, length: 23 },
            node_kind: DefNode(
                DefNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(4),
                    name_loc: Location { start: 34, length: 1 },
                    receiver: None,
                    parameters: None,
                    body: Some(
                        NodeRef(8),
                    ),
                    locals: [],
                    def_keyword_loc: Location { start: 30, length: 3 },
                    operator_loc: None,
                    lparen_loc: None,
                    rparen_loc: None,
                    equal_loc: None,
                    end_keyword_loc: Some(
                        Location { start: 50, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 53 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(1),
                        NodeRef(3),
                        NodeRef(5),
                        NodeRef(9),
                    ],
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 0, length: 53 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [
                        ConstantRef(4),
                    ],
                    statements: NodeRef(10),
                },
            ),
        },
    ],
    constants: [
        Owned(0, 5),
        Owned(6, 1),
        Owned(13, 2),
        Owned(22, 1),
        Owned(24, 1),
    ],
    content_pool: [],
}
