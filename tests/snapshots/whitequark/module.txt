Program {
    source: "module Foo; end\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            16,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 59,
        content_pool_size: 1,
    },
    root: NodeRef(3),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 7, length: 3 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 15 },
            node_kind: ModuleNode(
                ModuleNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    locals: [],
                    module_keyword_loc: Location { start: 0, length: 6 },
                    constant_path: NodeRef(0),
                    body: None,
                    end_keyword_loc: Location { start: 12, length: 3 },
                    name: ConstantRef(1),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 15 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(1),
                    ],
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 0, length: 15 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(2),
                },
            ),
        },
    ],
    constants: [
        Owned(7, 3),
    ],
    content_pool: [],
}
