Program {
    source: "def m() = 1 rescue 2\n\ndef self.m() = 1 rescue 2\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            21,
            22,
            48,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 163,
        content_pool_size: 1,
    },
    root: NodeRef(12),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 10, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 19, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 10, length: 10 },
            node_kind: RescueModifierNode(
                RescueModifierNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    expression: NodeRef(0),
                    keyword_loc: Location { start: 12, length: 6 },
                    rescue_expression: NodeRef(1),
                },
            ),
        },
        Node {
            identifier: 2,
            location: Location { start: 10, length: 10 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(2),
                    ],
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 0, length: 20 },
            node_kind: DefNode(
                DefNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    name_loc: Location { start: 4, length: 1 },
                    receiver: None,
                    parameters: None,
                    body: Some(
                        NodeRef(3),
                    ),
                    locals: [],
                    def_keyword_loc: Location { start: 0, length: 3 },
                    operator_loc: None,
                    lparen_loc: Some(
                        Location { start: 5, length: 1 },
                    ),
                    rparen_loc: Some(
                        Location { start: 6, length: 1 },
                    ),
                    equal_loc: Some(
                        Location { start: 8, length: 1 },
                    ),
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 26, length: 4 },
            node_kind: SelfNode(
                SelfNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 37, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 46, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 37, length: 10 },
            node_kind: RescueModifierNode(
                RescueModifierNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    expression: NodeRef(6),
                    keyword_loc: Location { start: 39, length: 6 },
                    rescue_expression: NodeRef(7),
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 37, length: 10 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(8),
                    ],
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 22, length: 25 },
            node_kind: DefNode(
                DefNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    name_loc: Location { start: 31, length: 1 },
                    receiver: Some(
                        NodeRef(5),
                    ),
                    parameters: None,
                    body: Some(
                        NodeRef(9),
                    ),
                    locals: [],
                    def_keyword_loc: Location { start: 22, length: 3 },
                    operator_loc: Some(
                        Location { start: 30, length: 1 },
                    ),
                    lparen_loc: Some(
                        Location { start: 32, length: 1 },
                    ),
                    rparen_loc: Some(
                        Location { start: 33, length: 1 },
                    ),
                    equal_loc: Some(
                        Location { start: 35, length: 1 },
                    ),
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 47 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(4),
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 0, length: 47 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(11),
                },
            ),
        },
    ],
    constants: [
        Owned(4, 1),
    ],
    content_pool: [],
}
