Program {
    source: "foo && (a, b = bar)\n\nfoo || (a, b = bar)\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            20,
            21,
            41,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - a",
                location: Location { start: 8, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - b",
                location: Location { start: 11, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 277,
        content_pool_size: 4,
    },
    root: NodeRef(17),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 0, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 0, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 8, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 11, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 15, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 15, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 8, length: 10 },
            node_kind: MultiWriteNode(
                MultiWriteNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    lefts: [
                        NodeRef(1),
                        NodeRef(2),
                    ],
                    rest: None,
                    rights: [],
                    lparen_loc: None,
                    rparen_loc: None,
                    operator_loc: Location { start: 13, length: 1 },
                    value: NodeRef(3),
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 8, length: 10 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 7, length: 12 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: Some(
                        NodeRef(5),
                    ),
                    opening_loc: Location { start: 7, length: 1 },
                    closing_loc: Location { start: 18, length: 1 },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 0, length: 19 },
            node_kind: AndNode(
                AndNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    left: NodeRef(0),
                    right: NodeRef(6),
                    operator_loc: Location { start: 4, length: 2 },
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 21, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 21, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 29, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 32, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 36, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 36, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 29, length: 10 },
            node_kind: MultiWriteNode(
                MultiWriteNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    lefts: [
                        NodeRef(9),
                        NodeRef(10),
                    ],
                    rest: None,
                    rights: [],
                    lparen_loc: None,
                    rparen_loc: None,
                    operator_loc: Location { start: 34, length: 1 },
                    value: NodeRef(11),
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 29, length: 10 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(12),
                    ],
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 28, length: 12 },
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: Some(
                        NodeRef(13),
                    ),
                    opening_loc: Location { start: 28, length: 1 },
                    closing_loc: Location { start: 39, length: 1 },
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 21, length: 19 },
            node_kind: OrNode(
                OrNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    left: NodeRef(8),
                    right: NodeRef(14),
                    operator_loc: Location { start: 25, length: 2 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 40 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(7),
                        NodeRef(15),
                    ],
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 0, length: 40 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [
                        ConstantRef(2),
                        ConstantRef(3),
                    ],
                    statements: NodeRef(16),
                },
            ),
        },
    ],
    constants: [
        Owned(0, 3),
        Owned(8, 1),
        Owned(11, 1),
        Owned(15, 3),
    ],
    content_pool: [],
}
