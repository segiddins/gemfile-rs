Program {
    source: "for i in 1..10\ni\nend\n\nfor i in 1..10; i; end\n\nfor i,j in 1..10\ni\nend\n\nfor i,j,k in 1..10\ni\nend\n\nfor i in 1..10 do\ni\nend\n\nfor i in 1..10; i; end\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            15,
            17,
            21,
            22,
            45,
            46,
            63,
            65,
            69,
            70,
            89,
            91,
            95,
            96,
            114,
            116,
            120,
            121,
            144,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - j",
                location: Location { start: 52, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - k",
                location: Location { start: 78, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 521,
        content_pool_size: 3,
    },
    root: NodeRef(48),
    nodes: [
        Node {
            identifier: 3,
            location: Location { start: 4, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 9, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 12, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 9, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    left: Some(
                        NodeRef(1),
                    ),
                    right: Some(
                        NodeRef(2),
                    ),
                    operator_loc: Location { start: 10, length: 2 },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 15, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 15, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(4),
                    ],
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 0, length: 20 },
            node_kind: ForNode(
                ForNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    index: NodeRef(0),
                    collection: NodeRef(3),
                    statements: Some(
                        NodeRef(5),
                    ),
                    for_keyword_loc: Location { start: 0, length: 3 },
                    in_keyword_loc: Location { start: 6, length: 2 },
                    do_keyword_loc: None,
                    end_keyword_loc: Location { start: 17, length: 3 },
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 26, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 31, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 34, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 31, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    left: Some(
                        NodeRef(8),
                    ),
                    right: Some(
                        NodeRef(9),
                    ),
                    operator_loc: Location { start: 32, length: 2 },
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 38, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 38, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(11),
                    ],
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 22, length: 22 },
            node_kind: ForNode(
                ForNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    index: NodeRef(7),
                    collection: NodeRef(10),
                    statements: Some(
                        NodeRef(12),
                    ),
                    for_keyword_loc: Location { start: 22, length: 3 },
                    in_keyword_loc: Location { start: 28, length: 2 },
                    do_keyword_loc: None,
                    end_keyword_loc: Location { start: 41, length: 3 },
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 50, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 52, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 50, length: 3 },
            node_kind: MultiTargetNode(
                MultiTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    lefts: [
                        NodeRef(14),
                        NodeRef(15),
                    ],
                    rest: None,
                    rights: [],
                    lparen_loc: None,
                    rparen_loc: None,
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 57, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 60, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 57, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    left: Some(
                        NodeRef(17),
                    ),
                    right: Some(
                        NodeRef(18),
                    ),
                    operator_loc: Location { start: 58, length: 2 },
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 63, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 63, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(20),
                    ],
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 46, length: 22 },
            node_kind: ForNode(
                ForNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    index: NodeRef(16),
                    collection: NodeRef(19),
                    statements: Some(
                        NodeRef(21),
                    ),
                    for_keyword_loc: Location { start: 46, length: 3 },
                    in_keyword_loc: Location { start: 54, length: 2 },
                    do_keyword_loc: None,
                    end_keyword_loc: Location { start: 65, length: 3 },
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 74, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 76, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 78, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 74, length: 5 },
            node_kind: MultiTargetNode(
                MultiTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    lefts: [
                        NodeRef(23),
                        NodeRef(24),
                        NodeRef(25),
                    ],
                    rest: None,
                    rights: [],
                    lparen_loc: None,
                    rparen_loc: None,
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 83, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 86, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 83, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    left: Some(
                        NodeRef(27),
                    ),
                    right: Some(
                        NodeRef(28),
                    ),
                    operator_loc: Location { start: 84, length: 2 },
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 89, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 89, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(30),
                    ],
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 70, length: 24 },
            node_kind: ForNode(
                ForNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    index: NodeRef(26),
                    collection: NodeRef(29),
                    statements: Some(
                        NodeRef(31),
                    ),
                    for_keyword_loc: Location { start: 70, length: 3 },
                    in_keyword_loc: Location { start: 80, length: 2 },
                    do_keyword_loc: None,
                    end_keyword_loc: Location { start: 91, length: 3 },
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 100, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 105, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 108, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 105, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    left: Some(
                        NodeRef(34),
                    ),
                    right: Some(
                        NodeRef(35),
                    ),
                    operator_loc: Location { start: 106, length: 2 },
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 114, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 114, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(37),
                    ],
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 96, length: 23 },
            node_kind: ForNode(
                ForNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    index: NodeRef(33),
                    collection: NodeRef(36),
                    statements: Some(
                        NodeRef(38),
                    ),
                    for_keyword_loc: Location { start: 96, length: 3 },
                    in_keyword_loc: Location { start: 102, length: 2 },
                    do_keyword_loc: Some(
                        Location { start: 111, length: 2 },
                    ),
                    end_keyword_loc: Location { start: 116, length: 3 },
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 125, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 130, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 47,
            location: Location { start: 133, length: 2 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: STATIC_LITERAL | DECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            10,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 48,
            location: Location { start: 130, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b10,
                        flags: STATIC_LITERAL,
                    },
                    left: Some(
                        NodeRef(41),
                    ),
                    right: Some(
                        NodeRef(42),
                    ),
                    operator_loc: Location { start: 131, length: 2 },
                },
            ),
        },
        Node {
            identifier: 50,
            location: Location { start: 137, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    name: ConstantRef(1),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 49,
            location: Location { start: 137, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(44),
                    ],
                },
            ),
        },
        Node {
            identifier: 51,
            location: Location { start: 121, length: 22 },
            node_kind: ForNode(
                ForNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    index: NodeRef(40),
                    collection: NodeRef(43),
                    statements: Some(
                        NodeRef(45),
                    ),
                    for_keyword_loc: Location { start: 121, length: 3 },
                    in_keyword_loc: Location { start: 127, length: 2 },
                    do_keyword_loc: None,
                    end_keyword_loc: Location { start: 140, length: 3 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 143 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(6),
                        NodeRef(13),
                        NodeRef(22),
                        NodeRef(32),
                        NodeRef(39),
                        NodeRef(46),
                    ],
                },
            ),
        },
        Node {
            identifier: 52,
            location: Location { start: 0, length: 143 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [
                        ConstantRef(1),
                        ConstantRef(2),
                        ConstantRef(3),
                    ],
                    statements: NodeRef(47),
                },
            ),
        },
    ],
    constants: [
        Owned(4, 1),
        Owned(52, 1),
        Owned(78, 1),
    ],
    content_pool: [],
}
