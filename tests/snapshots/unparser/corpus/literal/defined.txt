Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            15,
            29,
            57,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 318,
                message: "possibly useless use of defined? in void context",
                location: Location { start: 0, length: 14 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of defined? in void context",
                location: Location { start: 15, length: 13 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of defined? in void context",
                location: Location { start: 29, length: 27 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - a",
                location: Location { start: 40, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - b",
                location: Location { start: 43, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 407,
        content_pool_size: 4,
    },
    root: NodeRef(14),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 9, length: 4 },
            flags: 0,
            node_kind: InstanceVariableReadNode(
                InstanceVariableReadNode {
                    name: ConstantRef(1),
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 14 },
            flags: 1,
            node_kind: DefinedNode(
                DefinedNode {
                    lparen_loc: Some(
                        Location { start: 8, length: 1 },
                    ),
                    value: NodeRef(0),
                    rparen_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    keyword_loc: Location { start: 0, length: 8 },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 24, length: 3 },
            flags: 0,
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 15, length: 13 },
            flags: 1,
            node_kind: DefinedNode(
                DefinedNode {
                    lparen_loc: Some(
                        Location { start: 23, length: 1 },
                    ),
                    value: NodeRef(2),
                    rparen_loc: Some(
                        Location { start: 27, length: 1 },
                    ),
                    keyword_loc: Location { start: 15, length: 8 },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 40, length: 1 },
            flags: 0,
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 43, length: 1 },
            flags: 0,
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(4),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 49, length: 1 },
            flags: 10,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 52, length: 1 },
            flags: 10,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 48, length: 6 },
            flags: 2,
            node_kind: ArrayNode(
                ArrayNode {
                    elements: [
                        NodeRef(6),
                        NodeRef(7),
                    ],
                    opening_loc: Some(
                        Location { start: 48, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 53, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 39, length: 15 },
            flags: 1,
            node_kind: MultiWriteNode(
                MultiWriteNode {
                    lefts: [
                        NodeRef(4),
                        NodeRef(5),
                    ],
                    rest: None,
                    rights: [],
                    lparen_loc: Some(
                        Location { start: 39, length: 1 },
                    ),
                    rparen_loc: Some(
                        Location { start: 44, length: 1 },
                    ),
                    operator_loc: Location { start: 46, length: 1 },
                    value: NodeRef(8),
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 39, length: 15 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(9),
                    ],
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 38, length: 17 },
            flags: 0,
            node_kind: ParenthesesNode(
                ParenthesesNode {
                    body: Some(
                        NodeRef(10),
                    ),
                    opening_loc: Location { start: 38, length: 1 },
                    closing_loc: Location { start: 54, length: 1 },
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 29, length: 27 },
            flags: 1,
            node_kind: DefinedNode(
                DefinedNode {
                    lparen_loc: Some(
                        Location { start: 37, length: 1 },
                    ),
                    value: NodeRef(11),
                    rparen_loc: Some(
                        Location { start: 55, length: 1 },
                    ),
                    keyword_loc: Location { start: 29, length: 8 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 56 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(1),
                        NodeRef(3),
                        NodeRef(12),
                    ],
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 0, length: 56 },
            flags: 0,
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [
                        ConstantRef(3),
                        ConstantRef(4),
                    ],
                    statements: NodeRef(13),
                },
            ),
        },
    ],
    constants: [
        Owned(9, 4),
        Owned(24, 3),
        Owned(40, 1),
        Owned(43, 1),
    ],
    content_pool: [],
}
