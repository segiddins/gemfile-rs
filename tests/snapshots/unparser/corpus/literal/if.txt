Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            9,
            15,
            19,
            24,
            28,
            32,
            37,
            41,
            46,
            50,
            54,
            63,
            69,
            73,
            82,
            86,
            90,
            97,
            101,
            102,
            111,
            130,
            134,
            135,
            144,
            167,
            171,
            182,
            194,
            198,
            214,
            221,
            223,
            237,
            243,
            247,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 311,
                message: "regex literal in condition",
                location: Location { start: 3, length: 5 },
                level: 0,
            },
            Warning {
                type: 312,
                message: "literal in condition",
                location: Location { start: 22, length: 1 },
                level: 1,
            },
            Warning {
                type: 312,
                message: "literal in condition",
                location: Location { start: 35, length: 1 },
                level: 1,
            },
            Warning {
                type: 312,
                message: "literal in condition",
                location: Location { start: 61, length: 1 },
                level: 1,
            },
            Warning {
                type: 312,
                message: "literal in condition",
                location: Location { start: 80, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - pair",
                location: Location { start: 225, length: 4 },
                level: 1,
            },
        ],
        content_pool_offset: 885,
        content_pool_size: 5,
    },
    root: NodeRef(59),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 3, length: 5 },
            node_kind: MatchLastLineNode(
                MatchLastLineNode {
                    flags: BitFlags<RegularExpressionFlags> {
                        bits: 0b10,
                        flags: EXTENDED,
                    },
                    opening_loc: Location { start: 3, length: 1 },
                    content_loc: Location { start: 4, length: 3 },
                    closing_loc: Location { start: 7, length: 1 },
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 11, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1001,
                        flags: SAFE_NAVIGATION | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 11, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 11, length: 3 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(1),
                    ],
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 0, length: 18 },
            node_kind: IfNode(
                IfNode {
                    if_keyword_loc: Some(
                        Location { start: 0, length: 2 },
                    ),
                    predicate: NodeRef(0),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(2),
                    ),
                    subsequent: None,
                    end_keyword_loc: Some(
                        Location { start: 15, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 22, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            3,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 26, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1011,
                        flags: BINARY | DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            9,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 26, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(5),
                    ],
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 19, length: 12 },
            node_kind: IfNode(
                IfNode {
                    if_keyword_loc: Some(
                        Location { start: 19, length: 2 },
                    ),
                    predicate: NodeRef(4),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(6),
                    ),
                    subsequent: None,
                    end_keyword_loc: Some(
                        Location { start: 28, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 35, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            4,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 39, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1011,
                        flags: BINARY | DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            5,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 39, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(9),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 48, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1011,
                        flags: BINARY | DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            6,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 48, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(11),
                    ],
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 41, length: 12 },
            node_kind: ElseNode(
                ElseNode {
                    else_keyword_loc: Location { start: 41, length: 4 },
                    statements: Some(
                        NodeRef(12),
                    ),
                    end_keyword_loc: Some(
                        Location { start: 50, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 32, length: 21 },
            node_kind: IfNode(
                IfNode {
                    if_keyword_loc: Some(
                        Location { start: 32, length: 2 },
                    ),
                    predicate: NodeRef(8),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(10),
                    ),
                    subsequent: Some(
                        NodeRef(13),
                    ),
                    end_keyword_loc: Some(
                        Location { start: 50, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 61, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            3,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 65, length: 3 },
            node_kind: NilNode(
                NilNode,
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 65, length: 3 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(16),
                    ],
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 54, length: 18 },
            node_kind: UnlessNode(
                UnlessNode {
                    keyword_loc: Location { start: 54, length: 6 },
                    predicate: NodeRef(15),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(17),
                    ),
                    else_clause: None,
                    end_keyword_loc: Some(
                        Location { start: 69, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 80, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            3,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 84, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1011,
                        flags: BINARY | DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            9,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 84, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(20),
                    ],
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 73, length: 16 },
            node_kind: UnlessNode(
                UnlessNode {
                    keyword_loc: Location { start: 73, length: 6 },
                    predicate: NodeRef(19),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(21),
                    ),
                    else_clause: None,
                    end_keyword_loc: Some(
                        Location { start: 86, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 93, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 93, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 90, length: 10 },
            node_kind: IfNode(
                IfNode {
                    if_keyword_loc: Some(
                        Location { start: 90, length: 2 },
                    ),
                    predicate: NodeRef(23),
                    then_keyword_loc: None,
                    statements: None,
                    subsequent: None,
                    end_keyword_loc: Some(
                        Location { start: 97, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 109, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(3),
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 126, length: 3 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 119, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 119, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 113, length: 9 },
            node_kind: LocalVariableWriteNode(
                LocalVariableWriteNode {
                    name: ConstantRef(2),
                    depth: 0,
                    name_loc: Location { start: 113, length: 3 },
                    value: NodeRef(27),
                    operator_loc: Location { start: 117, length: 1 },
                },
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 113, length: 9 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(28),
                    ],
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 113, length: 16 },
            node_kind: IfNode(
                IfNode {
                    if_keyword_loc: Some(
                        Location { start: 123, length: 2 },
                    ),
                    predicate: NodeRef(26),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(29),
                    ),
                    subsequent: None,
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 113, length: 16 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(30),
                    ],
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 102, length: 31 },
            node_kind: ModuleNode(
                ModuleNode {
                    locals: [
                        ConstantRef(2),
                    ],
                    module_keyword_loc: Location { start: 102, length: 6 },
                    constant_path: NodeRef(25),
                    body: Some(
                        NodeRef(31),
                    ),
                    end_keyword_loc: Location { start: 130, length: 3 },
                    name: ConstantRef(3),
                },
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 142, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(4),
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 163, length: 3 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 152, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 152, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 146, length: 9 },
            node_kind: LocalVariableWriteNode(
                LocalVariableWriteNode {
                    name: ConstantRef(2),
                    depth: 0,
                    name_loc: Location { start: 146, length: 3 },
                    value: NodeRef(35),
                    operator_loc: Location { start: 150, length: 1 },
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 146, length: 9 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(36),
                    ],
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 146, length: 20 },
            node_kind: UnlessNode(
                UnlessNode {
                    keyword_loc: Location { start: 156, length: 6 },
                    predicate: NodeRef(34),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(37),
                    ),
                    else_clause: None,
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 146, length: 20 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(38),
                    ],
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 135, length: 35 },
            node_kind: ModuleNode(
                ModuleNode {
                    locals: [
                        ConstantRef(2),
                    ],
                    module_keyword_loc: Location { start: 135, length: 6 },
                    constant_path: NodeRef(33),
                    body: Some(
                        NodeRef(39),
                    ),
                    end_keyword_loc: Location { start: 167, length: 3 },
                    name: ConstantRef(4),
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 178, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 178, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 48,
            location: Location { start: 190, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 190, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 49,
            location: Location { start: 184, length: 9 },
            node_kind: LocalVariableWriteNode(
                LocalVariableWriteNode {
                    name: ConstantRef(2),
                    depth: 0,
                    name_loc: Location { start: 184, length: 3 },
                    value: NodeRef(42),
                    operator_loc: Location { start: 188, length: 1 },
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 184, length: 9 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(43),
                    ],
                },
            ),
        },
        Node {
            identifier: 50,
            location: Location { start: 171, length: 26 },
            node_kind: UnlessNode(
                UnlessNode {
                    keyword_loc: Location { start: 171, length: 6 },
                    predicate: NodeRef(41),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(44),
                    ),
                    else_clause: None,
                    end_keyword_loc: Some(
                        Location { start: 194, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 53,
            location: Location { start: 208, length: 4 },
            node_kind: RequiredParameterNode(
                RequiredParameterNode {
                    flags: BitFlags<ParameterFlags> {
                        bits: 0b0,
                    },
                    name: ConstantRef(5),
                },
            ),
        },
        Node {
            identifier: 52,
            location: Location { start: 208, length: 4 },
            node_kind: ParametersNode(
                ParametersNode {
                    requireds: [
                        NodeRef(46),
                    ],
                    optionals: [],
                    rest: None,
                    posts: [],
                    keywords: [],
                    keyword_rest: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 54,
            location: Location { start: 207, length: 6 },
            node_kind: BlockParametersNode(
                BlockParametersNode {
                    parameters: Some(
                        NodeRef(47),
                    ),
                    locals: [],
                    opening_loc: Some(
                        Location { start: 207, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 212, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 56,
            location: Location { start: 216, length: 4 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    name: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 55,
            location: Location { start: 216, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(49),
                    ],
                },
            ),
        },
        Node {
            identifier: 57,
            location: Location { start: 205, length: 17 },
            node_kind: BlockNode(
                BlockNode {
                    locals: [
                        ConstantRef(5),
                    ],
                    parameters: Some(
                        NodeRef(48),
                    ),
                    body: Some(
                        NodeRef(50),
                    ),
                    opening_loc: Location { start: 205, length: 1 },
                    closing_loc: Location { start: 221, length: 1 },
                },
            ),
        },
        Node {
            identifier: 58,
            location: Location { start: 201, length: 21 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b0,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 201, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: Some(
                        NodeRef(51),
                    ),
                },
            ),
        },
        Node {
            identifier: 61,
            location: Location { start: 232, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 232, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 233, length: 3 },
                    ),
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 62,
            location: Location { start: 225, length: 11 },
            node_kind: LocalVariableWriteNode(
                LocalVariableWriteNode {
                    name: ConstantRef(5),
                    depth: 0,
                    name_loc: Location { start: 225, length: 4 },
                    value: NodeRef(53),
                    operator_loc: Location { start: 230, length: 1 },
                },
            ),
        },
        Node {
            identifier: 63,
            location: Location { start: 239, length: 3 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    name: ConstantRef(2),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 59,
            location: Location { start: 225, length: 17 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(54),
                        NodeRef(55),
                    ],
                },
            ),
        },
        Node {
            identifier: 64,
            location: Location { start: 198, length: 48 },
            node_kind: IfNode(
                IfNode {
                    if_keyword_loc: Some(
                        Location { start: 198, length: 2 },
                    ),
                    predicate: NodeRef(52),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(56),
                    ),
                    subsequent: None,
                    end_keyword_loc: Some(
                        Location { start: 243, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 246 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(3),
                        NodeRef(7),
                        NodeRef(14),
                        NodeRef(18),
                        NodeRef(22),
                        NodeRef(24),
                        NodeRef(32),
                        NodeRef(40),
                        NodeRef(45),
                        NodeRef(57),
                    ],
                },
            ),
        },
        Node {
            identifier: 65,
            location: Location { start: 0, length: 246 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [
                        ConstantRef(2),
                        ConstantRef(5),
                    ],
                    statements: NodeRef(58),
                },
            ),
        },
    ],
    constants: [
        Owned(11, 3),
        Owned(93, 3),
        Owned(109, 1),
        Owned(142, 1),
        Owned(208, 4),
    ],
    content_pool: [],
}
