Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            9,
            32,
            39,
            56,
            60,
            74,
            81,
            95,
            102,
            121,
            128,
            146,
            153,
            175,
            182,
            193,
            200,
            216,
            223,
            240,
            247,
            261,
            268,
            283,
            290,
            301,
            308,
            313,
            323,
            330,
            335,
            342,
            346,
            355,
            373,
            377,
            386,
            391,
            396,
            400,
            409,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 317,
                message: "assigned but unused variable - a",
                location: Location { start: 21, length: 1 },
                level: 1,
            },
            Warning {
                type: 317,
                message: "assigned but unused variable - y",
                location: Location { start: 135, length: 1 },
                level: 1,
            },
        ],
        content_pool_offset: 1347,
        content_pool_size: 5,
    },
    root: NodeRef(120),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 5, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 5, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 12, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 14, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 17, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 21, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 20, length: 2 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 20, length: 1 },
                    expression: Some(
                        NodeRef(4),
                    ),
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 24, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            3,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 12, length: 14 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: Some(
                        NodeRef(1),
                    ),
                    requireds: [
                        NodeRef(2),
                        NodeRef(3),
                    ],
                    rest: Some(
                        NodeRef(5),
                    ),
                    posts: [
                        NodeRef(6),
                    ],
                    opening_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 25, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 34, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 34, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(8),
                    ],
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 9, length: 29 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(7),
                    statements: Some(
                        NodeRef(9),
                    ),
                    in_loc: Location { start: 9, length: 2 },
                    then_loc: Some(
                        Location { start: 27, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 43, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 46, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 47, length: 1 },
            node_kind: ImplicitRestNode(
                ImplicitRestNode,
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 42, length: 8 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(11),
                        NodeRef(12),
                    ],
                    rest: Some(
                        NodeRef(13),
                    ),
                    posts: [],
                    opening_loc: Some(
                        Location { start: 42, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 49, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 58, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1001,
                        flags: SAFE_NAVIGATION | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 58, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 58, length: 1 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(15),
                    ],
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 39, length: 20 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(14),
                    statements: Some(
                        NodeRef(16),
                    ),
                    in_loc: Location { start: 39, length: 2 },
                    then_loc: Some(
                        Location { start: 51, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 63, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 65, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 65, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 66, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 65, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 65, length: 1 },
            node_kind: ImplicitNode(
                ImplicitNode {
                    value: NodeRef(20),
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 65, length: 2 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(19),
                    value: NodeRef(21),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 63, length: 5 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: Some(
                        NodeRef(18),
                    ),
                    elements: [
                        NodeRef(22),
                    ],
                    rest: None,
                    opening_loc: Some(
                        Location { start: 64, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 67, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 76, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 76, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(24),
                    ],
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 60, length: 20 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(23),
                    statements: Some(
                        NodeRef(25),
                    ),
                    in_loc: Location { start: 60, length: 2 },
                    then_loc: Some(
                        Location { start: 69, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 87, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 85, length: 3 },
            node_kind: AssocSplatNode(
                AssocSplatNode {
                    value: Some(
                        NodeRef(27),
                    ),
                    operator_loc: Location { start: 85, length: 2 },
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 84, length: 5 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [],
                    rest: Some(
                        NodeRef(28),
                    ),
                    opening_loc: Some(
                        Location { start: 84, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 88, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 34,
            location: Location { start: 97, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 33,
            location: Location { start: 97, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(30),
                    ],
                },
            ),
        },
        Node {
            identifier: 35,
            location: Location { start: 81, length: 20 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(29),
                    statements: Some(
                        NodeRef(31),
                    ),
                    in_loc: Location { start: 81, length: 2 },
                    then_loc: Some(
                        Location { start: 90, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 37,
            location: Location { start: 111, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 36,
            location: Location { start: 105, length: 2 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [],
                    rest: None,
                    opening_loc: Some(
                        Location { start: 105, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 106, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 38,
            location: Location { start: 105, length: 2 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(34),
                    ],
                },
            ),
        },
        Node {
            identifier: 39,
            location: Location { start: 105, length: 10 },
            node_kind: IfNode(
                IfNode {
                    if_keyword_loc: Some(
                        Location { start: 108, length: 2 },
                    ),
                    predicate: NodeRef(33),
                    then_keyword_loc: None,
                    statements: Some(
                        NodeRef(35),
                    ),
                    subsequent: None,
                    end_keyword_loc: None,
                },
            ),
        },
        Node {
            identifier: 41,
            location: Location { start: 123, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 40,
            location: Location { start: 123, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(37),
                    ],
                },
            ),
        },
        Node {
            identifier: 42,
            location: Location { start: 102, length: 25 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(36),
                    statements: Some(
                        NodeRef(38),
                    ),
                    in_loc: Location { start: 102, length: 2 },
                    then_loc: Some(
                        Location { start: 116, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 43,
            location: Location { start: 132, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 44,
            location: Location { start: 135, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(4),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 45,
            location: Location { start: 138, length: 1 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 138, length: 1 },
                    expression: None,
                },
            ),
        },
        Node {
            identifier: 46,
            location: Location { start: 131, length: 9 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(40),
                        NodeRef(41),
                    ],
                    rest: Some(
                        NodeRef(42),
                    ),
                    posts: [],
                    opening_loc: Some(
                        Location { start: 131, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 139, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 48,
            location: Location { start: 148, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 47,
            location: Location { start: 148, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(44),
                    ],
                },
            ),
        },
        Node {
            identifier: 49,
            location: Location { start: 128, length: 24 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(43),
                    statements: Some(
                        NodeRef(45),
                    ),
                    in_loc: Location { start: 128, length: 2 },
                    then_loc: Some(
                        Location { start: 141, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 50,
            location: Location { start: 157, length: 2 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 157, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 158, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 51,
            location: Location { start: 160, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 52,
            location: Location { start: 157, length: 4 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(47),
                    value: NodeRef(48),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 53,
            location: Location { start: 163, length: 3 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: None,
                    value_loc: Some(
                        Location { start: 163, length: 2 },
                    ),
                    closing_loc: Some(
                        Location { start: 165, length: 1 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 54,
            location: Location { start: 167, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 55,
            location: Location { start: 163, length: 5 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(50),
                    value: NodeRef(51),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 56,
            location: Location { start: 156, length: 13 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [
                        NodeRef(49),
                        NodeRef(52),
                    ],
                    rest: None,
                    opening_loc: Some(
                        Location { start: 156, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 168, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 58,
            location: Location { start: 177, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 57,
            location: Location { start: 177, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(54),
                    ],
                },
            ),
        },
        Node {
            identifier: 59,
            location: Location { start: 153, length: 28 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(53),
                    statements: Some(
                        NodeRef(55),
                    ),
                    in_loc: Location { start: 153, length: 2 },
                    then_loc: Some(
                        Location { start: 170, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 60,
            location: Location { start: 185, length: 2 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [],
                    rest: None,
                    opening_loc: Some(
                        Location { start: 185, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 186, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 62,
            location: Location { start: 195, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 61,
            location: Location { start: 195, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(58),
                    ],
                },
            ),
        },
        Node {
            identifier: 63,
            location: Location { start: 182, length: 17 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(57),
                    statements: Some(
                        NodeRef(59),
                    ),
                    in_loc: Location { start: 182, length: 2 },
                    then_loc: Some(
                        Location { start: 188, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 64,
            location: Location { start: 204, length: 5 },
            node_kind: NoKeywordsParameterNode(
                NoKeywordsParameterNode {
                    operator_loc: Location { start: 204, length: 2 },
                    keyword_loc: Location { start: 206, length: 3 },
                },
            ),
        },
        Node {
            identifier: 65,
            location: Location { start: 203, length: 7 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [],
                    rest: Some(
                        NodeRef(61),
                    ),
                    opening_loc: Some(
                        Location { start: 203, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 209, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 67,
            location: Location { start: 218, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 66,
            location: Location { start: 218, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(63),
                    ],
                },
            ),
        },
        Node {
            identifier: 68,
            location: Location { start: 200, length: 22 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(62),
                    statements: Some(
                        NodeRef(64),
                    ),
                    in_loc: Location { start: 200, length: 2 },
                    then_loc: Some(
                        Location { start: 211, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 69,
            location: Location { start: 227, length: 4 },
            node_kind: SymbolNode(
                SymbolNode {
                    flags: BitFlags<SymbolFlags> {
                        bits: 0b10,
                        flags: FORCED_BINARY_ENCODING,
                    },
                    opening_loc: Some(
                        Location { start: 227, length: 1 },
                    ),
                    value_loc: Some(
                        Location { start: 228, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 229, length: 2 },
                    ),
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 70,
            location: Location { start: 232, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 71,
            location: Location { start: 227, length: 6 },
            node_kind: AssocNode(
                AssocNode {
                    key: NodeRef(66),
                    value: NodeRef(67),
                    operator_loc: None,
                },
            ),
        },
        Node {
            identifier: 72,
            location: Location { start: 226, length: 8 },
            node_kind: HashPatternNode(
                HashPatternNode {
                    constant: None,
                    elements: [
                        NodeRef(68),
                    ],
                    rest: None,
                    opening_loc: Some(
                        Location { start: 226, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 233, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 74,
            location: Location { start: 242, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 73,
            location: Location { start: 242, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(70),
                    ],
                },
            ),
        },
        Node {
            identifier: 75,
            location: Location { start: 223, length: 23 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(69),
                    statements: Some(
                        NodeRef(71),
                    ),
                    in_loc: Location { start: 223, length: 2 },
                    then_loc: Some(
                        Location { start: 235, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 76,
            location: Location { start: 250, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 77,
            location: Location { start: 254, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 78,
            location: Location { start: 250, length: 5 },
            node_kind: AlternationPatternNode(
                AlternationPatternNode {
                    left: NodeRef(73),
                    right: NodeRef(74),
                    operator_loc: Location { start: 252, length: 1 },
                },
            ),
        },
        Node {
            identifier: 80,
            location: Location { start: 263, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 79,
            location: Location { start: 263, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(76),
                    ],
                },
            ),
        },
        Node {
            identifier: 81,
            location: Location { start: 247, length: 20 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(75),
                    statements: Some(
                        NodeRef(77),
                    ),
                    in_loc: Location { start: 247, length: 2 },
                    then_loc: Some(
                        Location { start: 256, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 82,
            location: Location { start: 271, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 83,
            location: Location { start: 276, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 84,
            location: Location { start: 271, length: 6 },
            node_kind: CapturePatternNode(
                CapturePatternNode {
                    value: NodeRef(79),
                    target: NodeRef(80),
                    operator_loc: Location { start: 273, length: 2 },
                },
            ),
        },
        Node {
            identifier: 86,
            location: Location { start: 285, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 85,
            location: Location { start: 285, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(82),
                    ],
                },
            ),
        },
        Node {
            identifier: 87,
            location: Location { start: 268, length: 21 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(81),
                    statements: Some(
                        NodeRef(83),
                    ),
                    in_loc: Location { start: 268, length: 2 },
                    then_loc: Some(
                        Location { start: 278, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 88,
            location: Location { start: 294, length: 1 },
            node_kind: LocalVariableReadNode(
                LocalVariableReadNode {
                    name: ConstantRef(5),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 89,
            location: Location { start: 293, length: 2 },
            node_kind: PinnedVariableNode(
                PinnedVariableNode {
                    variable: NodeRef(85),
                    operator_loc: Location { start: 293, length: 1 },
                },
            ),
        },
        Node {
            identifier: 91,
            location: Location { start: 303, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 90,
            location: Location { start: 303, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(87),
                    ],
                },
            ),
        },
        Node {
            identifier: 92,
            location: Location { start: 290, length: 17 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(86),
                    statements: Some(
                        NodeRef(88),
                    ),
                    in_loc: Location { start: 290, length: 2 },
                    then_loc: Some(
                        Location { start: 296, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 93,
            location: Location { start: 311, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 94,
            location: Location { start: 308, length: 4 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(90),
                    statements: None,
                    in_loc: Location { start: 308, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 95,
            location: Location { start: 316, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 97,
            location: Location { start: 325, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 96,
            location: Location { start: 325, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(93),
                    ],
                },
            ),
        },
        Node {
            identifier: 98,
            location: Location { start: 313, length: 16 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(92),
                    statements: Some(
                        NodeRef(94),
                    ),
                    in_loc: Location { start: 313, length: 2 },
                    then_loc: Some(
                        Location { start: 318, length: 4 },
                    ),
                },
            ),
        },
        Node {
            identifier: 100,
            location: Location { start: 337, length: 4 },
            node_kind: TrueNode(
                TrueNode,
            ),
        },
        Node {
            identifier: 99,
            location: Location { start: 337, length: 4 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(96),
                    ],
                },
            ),
        },
        Node {
            identifier: 101,
            location: Location { start: 330, length: 15 },
            node_kind: ElseNode(
                ElseNode {
                    else_keyword_loc: Location { start: 330, length: 4 },
                    statements: Some(
                        NodeRef(97),
                    ),
                    end_keyword_loc: Some(
                        Location { start: 342, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 0, length: 345 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(0),
                    ),
                    conditions: [
                        NodeRef(10),
                        NodeRef(17),
                        NodeRef(26),
                        NodeRef(32),
                        NodeRef(39),
                        NodeRef(46),
                        NodeRef(56),
                        NodeRef(60),
                        NodeRef(65),
                        NodeRef(72),
                        NodeRef(78),
                        NodeRef(84),
                        NodeRef(89),
                        NodeRef(91),
                        NodeRef(95),
                    ],
                    else_clause: Some(
                        NodeRef(98),
                    ),
                    case_keyword_loc: Location { start: 0, length: 4 },
                    end_keyword_loc: Location { start: 342, length: 3 },
                },
            ),
        },
        Node {
            identifier: 102,
            location: Location { start: 351, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 351, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 104,
            location: Location { start: 358, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 105,
            location: Location { start: 360, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 106,
            location: Location { start: 363, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            2,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 107,
            location: Location { start: 367, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 108,
            location: Location { start: 366, length: 2 },
            node_kind: SplatNode(
                SplatNode {
                    operator_loc: Location { start: 366, length: 1 },
                    expression: Some(
                        NodeRef(104),
                    ),
                },
            ),
        },
        Node {
            identifier: 109,
            location: Location { start: 370, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            3,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 110,
            location: Location { start: 358, length: 14 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: Some(
                        NodeRef(101),
                    ),
                    requireds: [
                        NodeRef(102),
                        NodeRef(103),
                    ],
                    rest: Some(
                        NodeRef(105),
                    ),
                    posts: [
                        NodeRef(106),
                    ],
                    opening_loc: Some(
                        Location { start: 359, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 371, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 111,
            location: Location { start: 355, length: 17 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(107),
                    statements: None,
                    in_loc: Location { start: 355, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 103,
            location: Location { start: 346, length: 30 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(100),
                    ),
                    conditions: [
                        NodeRef(108),
                    ],
                    else_clause: None,
                    case_keyword_loc: Location { start: 346, length: 4 },
                    end_keyword_loc: Location { start: 373, length: 3 },
                },
            ),
        },
        Node {
            identifier: 112,
            location: Location { start: 382, length: 3 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b1000,
                        flags: IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 382, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 114,
            location: Location { start: 389, length: 1 },
            node_kind: ConstantReadNode(
                ConstantReadNode {
                    name: ConstantRef(2),
                },
            ),
        },
        Node {
            identifier: 115,
            location: Location { start: 386, length: 4 },
            node_kind: InNode(
                InNode {
                    pattern: NodeRef(111),
                    statements: None,
                    in_loc: Location { start: 386, length: 2 },
                    then_loc: None,
                },
            ),
        },
        Node {
            identifier: 116,
            location: Location { start: 391, length: 8 },
            node_kind: ElseNode(
                ElseNode {
                    else_keyword_loc: Location { start: 391, length: 4 },
                    statements: None,
                    end_keyword_loc: Some(
                        Location { start: 396, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 113,
            location: Location { start: 377, length: 22 },
            node_kind: CaseMatchNode(
                CaseMatchNode {
                    predicate: Some(
                        NodeRef(110),
                    ),
                    conditions: [
                        NodeRef(112),
                    ],
                    else_clause: Some(
                        NodeRef(113),
                    ),
                    case_keyword_loc: Location { start: 377, length: 4 },
                    end_keyword_loc: Location { start: 396, length: 3 },
                },
            ),
        },
        Node {
            identifier: 117,
            location: Location { start: 400, length: 1 },
            node_kind: IntegerNode(
                IntegerNode {
                    flags: BitFlags<IntegerBaseFlags> {
                        bits: 0b1010,
                        flags: DECIMAL | HEXADECIMAL,
                    },
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 118,
            location: Location { start: 406, length: 1 },
            node_kind: LocalVariableTargetNode(
                LocalVariableTargetNode {
                    name: ConstantRef(3),
                    depth: 0,
                },
            ),
        },
        Node {
            identifier: 119,
            location: Location { start: 405, length: 3 },
            node_kind: ArrayPatternNode(
                ArrayPatternNode {
                    constant: None,
                    requireds: [
                        NodeRef(116),
                    ],
                    rest: None,
                    posts: [],
                    opening_loc: Some(
                        Location { start: 405, length: 1 },
                    ),
                    closing_loc: Some(
                        Location { start: 407, length: 1 },
                    ),
                },
            ),
        },
        Node {
            identifier: 120,
            location: Location { start: 400, length: 8 },
            node_kind: MatchPredicateNode(
                MatchPredicateNode {
                    value: NodeRef(115),
                    pattern: NodeRef(117),
                    operator_loc: Location { start: 402, length: 2 },
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 408 },
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(99),
                        NodeRef(109),
                        NodeRef(114),
                        NodeRef(118),
                    ],
                },
            ),
        },
        Node {
            identifier: 121,
            location: Location { start: 0, length: 408 },
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [
                        ConstantRef(3),
                        ConstantRef(5),
                        ConstantRef(4),
                    ],
                    statements: NodeRef(119),
                },
            ),
        },
    ],
    constants: [
        Owned(5, 3),
        Owned(12, 1),
        Owned(21, 1),
        Owned(58, 1),
        Owned(65, 1),
    ],
    content_pool: [],
}
