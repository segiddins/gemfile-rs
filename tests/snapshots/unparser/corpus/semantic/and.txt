Program {
    source: "a...b or c...d\na...b and c...d\n\nif a...b or c...d\nend\n\nif a...b and c...d\nend\n",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            15,
            31,
            32,
            50,
            54,
            55,
            74,
            78,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [],
        content_pool_offset: 400,
        content_pool_size: 4,
    },
    root: NodeRef(31),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 0, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 0, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 4, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 4, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 0, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(0),
                    ),
                    right: Some(
                        NodeRef(1),
                    ),
                    operator_loc: Location { start: 1, length: 3 },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 9, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 9, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 13, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 13, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 9, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(3),
                    ),
                    right: Some(
                        NodeRef(4),
                    ),
                    operator_loc: Location { start: 10, length: 3 },
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 0, length: 14 },
            node_kind: OrNode(
                OrNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    left: NodeRef(2),
                    right: NodeRef(5),
                    operator_loc: Location { start: 6, length: 2 },
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 15, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 15, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 19, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 19, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 15, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(7),
                    ),
                    right: Some(
                        NodeRef(8),
                    ),
                    operator_loc: Location { start: 16, length: 3 },
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 25, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 25, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 29, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 29, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 25, length: 5 },
            node_kind: RangeNode(
                RangeNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(10),
                    ),
                    right: Some(
                        NodeRef(11),
                    ),
                    operator_loc: Location { start: 26, length: 3 },
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 15, length: 15 },
            node_kind: AndNode(
                AndNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    left: NodeRef(9),
                    right: NodeRef(12),
                    operator_loc: Location { start: 21, length: 3 },
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 35, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 35, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 39, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 39, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 35, length: 5 },
            node_kind: FlipFlopNode(
                FlipFlopNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(14),
                    ),
                    right: Some(
                        NodeRef(15),
                    ),
                    operator_loc: Location { start: 36, length: 3 },
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 44, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 44, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 48, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 48, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 44, length: 5 },
            node_kind: FlipFlopNode(
                FlipFlopNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(17),
                    ),
                    right: Some(
                        NodeRef(18),
                    ),
                    operator_loc: Location { start: 45, length: 3 },
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 35, length: 14 },
            node_kind: OrNode(
                OrNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    left: NodeRef(16),
                    right: NodeRef(19),
                    operator_loc: Location { start: 41, length: 2 },
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 32, length: 21 },
            node_kind: IfNode(
                IfNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    if_keyword_loc: Some(
                        Location { start: 32, length: 2 },
                    ),
                    predicate: NodeRef(20),
                    then_keyword_loc: None,
                    statements: None,
                    subsequent: None,
                    end_keyword_loc: Some(
                        Location { start: 50, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 58, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(1),
                    message_loc: Some(
                        Location { start: 58, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 25,
            location: Location { start: 62, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 62, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 26,
            location: Location { start: 58, length: 5 },
            node_kind: FlipFlopNode(
                FlipFlopNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(22),
                    ),
                    right: Some(
                        NodeRef(23),
                    ),
                    operator_loc: Location { start: 59, length: 3 },
                },
            ),
        },
        Node {
            identifier: 27,
            location: Location { start: 68, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 68, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 28,
            location: Location { start: 72, length: 1 },
            node_kind: CallNode(
                CallNode {
                    flags: BitFlags<CallNodeFlags> {
                        bits: 0b101000,
                        flags: VARIABLE_CALL | IGNORE_VISIBILITY,
                    },
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 72, length: 1 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 29,
            location: Location { start: 68, length: 5 },
            node_kind: FlipFlopNode(
                FlipFlopNode {
                    flags: BitFlags<RangeFlags> {
                        bits: 0b100,
                        flags: EXCLUDE_END,
                    },
                    left: Some(
                        NodeRef(25),
                    ),
                    right: Some(
                        NodeRef(26),
                    ),
                    operator_loc: Location { start: 69, length: 3 },
                },
            ),
        },
        Node {
            identifier: 30,
            location: Location { start: 58, length: 15 },
            node_kind: AndNode(
                AndNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    left: NodeRef(24),
                    right: NodeRef(27),
                    operator_loc: Location { start: 64, length: 3 },
                },
            ),
        },
        Node {
            identifier: 31,
            location: Location { start: 55, length: 22 },
            node_kind: IfNode(
                IfNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b1,
                        flags: NEWLINE,
                    },
                    if_keyword_loc: Some(
                        Location { start: 55, length: 2 },
                    ),
                    predicate: NodeRef(28),
                    then_keyword_loc: None,
                    statements: None,
                    subsequent: None,
                    end_keyword_loc: Some(
                        Location { start: 74, length: 3 },
                    ),
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 77 },
            node_kind: StatementsNode(
                StatementsNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    body: [
                        NodeRef(6),
                        NodeRef(13),
                        NodeRef(21),
                        NodeRef(29),
                    ],
                },
            ),
        },
        Node {
            identifier: 32,
            location: Location { start: 0, length: 77 },
            node_kind: ProgramNode(
                ProgramNode {
                    flags: BitFlags<DefaultNodeFlags> {
                        bits: 0b0,
                    },
                    locals: [],
                    statements: NodeRef(30),
                },
            ),
        },
    ],
    constants: [
        Owned(0, 1),
        Owned(4, 1),
        Owned(9, 1),
        Owned(13, 1),
    ],
    content_pool: [],
}
