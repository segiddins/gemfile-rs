Program {
    source: "",
    header: Header {
        prism_major: 1,
        prism_minor: 3,
        prism_patch: 0,
        only_semantics_serialized: false,
        encoding_name: "UTF-8",
        start_line: 1,
        newline_offsets: [
            0,
            5,
            9,
            13,
            19,
            24,
            39,
            55,
            58,
            64,
            71,
            86,
            103,
            121,
            132,
        ],
        comments: [],
        magic_comments: [],
        end_keyword: None,
        errors: [],
        warnings: [
            Warning {
                type: 303,
                message: "Float 10e10000000000 out of range",
                location: Location { start: 24, length: 14 },
                level: 1,
            },
            Warning {
                type: 303,
                message: "Float 10e10000000000 out of range",
                location: Location { start: 40, length: 14 },
                level: 1,
            },
            Warning {
                type: 303,
                message: "Float 10.2e10000000000 out of range",
                location: Location { start: 86, length: 16 },
                level: 1,
            },
            Warning {
                type: 303,
                message: "Float 10.2e10000000000 out of range",
                location: Location { start: 104, length: 16 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 0, length: 4 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 5, length: 3 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 9, length: 3 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 13, length: 5 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 19, length: 4 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 24, length: 14 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 39, length: 15 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 55, length: 2 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 58, length: 5 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 64, length: 6 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 71, length: 14 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 86, length: 16 },
                level: 1,
            },
            Warning {
                type: 318,
                message: "possibly useless use of a literal in void context",
                location: Location { start: 103, length: 17 },
                level: 1,
            },
        ],
        content_pool_offset: 1184,
        content_pool_size: 4,
    },
    root: NodeRef(23),
    nodes: [
        Node {
            identifier: 2,
            location: Location { start: 0, length: 4 },
            flags: 11,
            node_kind: RationalNode(
                RationalNode {
                    numerator: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                    denominator: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 3,
            location: Location { start: 5, length: 3 },
            flags: 11,
            node_kind: RationalNode(
                RationalNode {
                    numerator: Integer {
                        is_negative: true,
                        words: [
                            0,
                        ],
                    },
                    denominator: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 4,
            location: Location { start: 9, length: 3 },
            flags: 35,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            1,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 5,
            location: Location { start: 13, length: 5 },
            flags: 11,
            node_kind: IntegerNode(
                IntegerNode {
                    value: Integer {
                        is_negative: false,
                        words: [
                            1000,
                        ],
                    },
                },
            ),
        },
        Node {
            identifier: 6,
            location: Location { start: 19, length: 4 },
            flags: 3,
            node_kind: FloatNode(
                FloatNode {
                    value: 10000000000.0,
                },
            ),
        },
        Node {
            identifier: 7,
            location: Location { start: 24, length: 14 },
            flags: 3,
            node_kind: FloatNode(
                FloatNode {
                    value: inf,
                },
            ),
        },
        Node {
            identifier: 8,
            location: Location { start: 39, length: 15 },
            flags: 3,
            node_kind: FloatNode(
                FloatNode {
                    value: -inf,
                },
            ),
        },
        Node {
            identifier: 9,
            location: Location { start: 55, length: 2 },
            flags: 1,
            node_kind: StringNode(
                StringNode {
                    opening_loc: Some(
                        Location { start: 55, length: 1 },
                    ),
                    content_loc: Location { start: 56, length: 1 },
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 10,
            location: Location { start: 58, length: 5 },
            flags: 4099,
            node_kind: RegularExpressionNode(
                RegularExpressionNode {
                    opening_loc: Location { start: 58, length: 3 },
                    content_loc: Location { start: 61, length: 1 },
                    closing_loc: Location { start: 62, length: 1 },
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 11,
            location: Location { start: 64, length: 6 },
            flags: 4099,
            node_kind: RegularExpressionNode(
                RegularExpressionNode {
                    opening_loc: Location { start: 64, length: 3 },
                    content_loc: Location { start: 67, length: 2 },
                    closing_loc: Location { start: 69, length: 1 },
                    unescaped: "\\)",
                },
            ),
        },
        Node {
            identifier: 14,
            location: Location { start: 76, length: 4 },
            flags: 0,
            node_kind: InstanceVariableReadNode(
                InstanceVariableReadNode {
                    name: ConstantRef(1),
                },
            ),
        },
        Node {
            identifier: 13,
            location: Location { start: 76, length: 4 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(10),
                    ],
                },
            ),
        },
        Node {
            identifier: 15,
            location: Location { start: 74, length: 7 },
            flags: 0,
            node_kind: EmbeddedStatementsNode(
                EmbeddedStatementsNode {
                    opening_loc: Location { start: 74, length: 2 },
                    statements: Some(
                        NodeRef(11),
                    ),
                    closing_loc: Location { start: 80, length: 1 },
                },
            ),
        },
        Node {
            identifier: 16,
            location: Location { start: 81, length: 3 },
            flags: 18,
            node_kind: StringNode(
                StringNode {
                    opening_loc: None,
                    content_loc: Location { start: 81, length: 3 },
                    closing_loc: None,
                    unescaped: "",
                },
            ),
        },
        Node {
            identifier: 12,
            location: Location { start: 71, length: 14 },
            flags: 1,
            node_kind: InterpolatedRegularExpressionNode(
                InterpolatedRegularExpressionNode {
                    opening_loc: Location { start: 71, length: 3 },
                    parts: [
                        NodeRef(12),
                        NodeRef(13),
                    ],
                    closing_loc: Location { start: 84, length: 1 },
                },
            ),
        },
        Node {
            identifier: 17,
            location: Location { start: 86, length: 16 },
            flags: 3,
            node_kind: FloatNode(
                FloatNode {
                    value: inf,
                },
            ),
        },
        Node {
            identifier: 18,
            location: Location { start: 103, length: 17 },
            flags: 3,
            node_kind: FloatNode(
                FloatNode {
                    value: -inf,
                },
            ),
        },
        Node {
            identifier: 21,
            location: Location { start: 127, length: 3 },
            flags: 40,
            node_kind: CallNode(
                CallNode {
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(4),
                    message_loc: Some(
                        Location { start: 127, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: None,
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 22,
            location: Location { start: 127, length: 3 },
            flags: 0,
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    arguments: [
                        NodeRef(17),
                    ],
                },
            ),
        },
        Node {
            identifier: 20,
            location: Location { start: 123, length: 7 },
            flags: 32,
            node_kind: CallNode(
                CallNode {
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(3),
                    message_loc: Some(
                        Location { start: 123, length: 3 },
                    ),
                    opening_loc: None,
                    arguments: Some(
                        NodeRef(18),
                    ),
                    closing_loc: None,
                    block: None,
                },
            ),
        },
        Node {
            identifier: 23,
            location: Location { start: 123, length: 7 },
            flags: 0,
            node_kind: ArgumentsNode(
                ArgumentsNode {
                    arguments: [
                        NodeRef(19),
                    ],
                },
            ),
        },
        Node {
            identifier: 19,
            location: Location { start: 121, length: 10 },
            flags: 33,
            node_kind: CallNode(
                CallNode {
                    receiver: None,
                    call_operator_loc: None,
                    name: ConstantRef(2),
                    message_loc: Some(
                        Location { start: 121, length: 1 },
                    ),
                    opening_loc: Some(
                        Location { start: 122, length: 1 },
                    ),
                    arguments: Some(
                        NodeRef(20),
                    ),
                    closing_loc: Some(
                        Location { start: 130, length: 1 },
                    ),
                    block: None,
                },
            ),
        },
        Node {
            identifier: 1,
            location: Location { start: 0, length: 131 },
            flags: 0,
            node_kind: StatementsNode(
                StatementsNode {
                    body: [
                        NodeRef(0),
                        NodeRef(1),
                        NodeRef(2),
                        NodeRef(3),
                        NodeRef(4),
                        NodeRef(5),
                        NodeRef(6),
                        NodeRef(7),
                        NodeRef(8),
                        NodeRef(9),
                        NodeRef(14),
                        NodeRef(15),
                        NodeRef(16),
                        NodeRef(21),
                    ],
                },
            ),
        },
        Node {
            identifier: 24,
            location: Location { start: 0, length: 131 },
            flags: 0,
            node_kind: ProgramNode(
                ProgramNode {
                    locals: [],
                    statements: NodeRef(22),
                },
            ),
        },
    ],
    constants: [
        Owned(76, 4),
        Owned(121, 1),
        Owned(123, 3),
        Owned(127, 3),
    ],
    content_pool: [],
}
